# /*
# SnakeApp.cpp
# --------------------------
# The main applicatin that handles switching between the
# different scenes in this demo, as well as any common 
# setup and input handling.
# */

ANY_QUERY_MASK                  = 1<<0
STATIC_GEOMETRY_QUERY_MASK      = 1<<4
WORLD_STEP = 0.001

import ogre.renderer.OGRE as ogre
import ogre.physics.OgreOde as OgreOde
import ogre.io.OIS as OIS
import sf_OIS as sf

from opaque.robot.SnakeProbe import SnakeProbe
from opaque.TestModular import TestModular
from opaque.TestHoldPosition import TestHoldPosition
from opaque.TestHoldTransition import TestHoldTransition
from opaque.TestHoldTransition import TestHoldTransition
from opaque.TestHoldSlideTransition import TestHoldSlideTransition
from opaque.TestAnchorTransition import TestAnchorTransition
from opaque.TestFrontExtend import TestFrontExtend
from opaque.TestPokeWalls import TestPokeWalls
from opaque.environment.WallSections import WallSections
from DrawThings import DrawThings


import traceback 
import cProfile
import sys
from math import cos, sin, pi
from copy import copy




import opaque.control as controls

## We need a frame listener class
class SnakeListener (OgreOde.CollisionListener):

	def __init__(self, world, plane, probe):
		OgreOde.CollisionListener.__init__(self)
		self._world = world
		self._world.setCollisionListener(self)
		self._plane = plane
		self.probe = probe

	def collision(self, contact):

		# print "Simple Scenes Collision"
		## Check for collisions between things that are connected and ignore them
		g1 = contact.getFirstGeometry()
		g2 = contact.getSecondGeometry()

		if (g1 and g2):
			b1 = g1.getBody()
			b2 = g2.getBody()

			if (b1 and b2 and OgreOde.Joint.areConnected(b1, b2)):
				return False 

		## Set the contact friction mode
		contact.setFrictionMode(OgreOde.Contact.Flag.Flag_BothFrictionPyramids)

		
		# plane friction is very low
		if g1 == self._plane or g2 == self._plane:
			contact.setCoulombFriction( 0.001 )    ### OgreOde.Utility.Infinity)

		# wall friction is higher
		else:
			contact.setCoulombFriction( self.probe.friction )    ### OgreOde.Utility.Infinity)

		try:
			if self.probe.control.isAnchored:
				for i in range(16,23):
					if g1 == self.probe._geoms[i] and g2 == self._plane:
						contact.setCoulombFriction( 100.0 )					
	
					if g1 == self._plane and g2 == self.probe._geoms[i]:
						contact.setCoulombFriction( 100.0 )					

		except:
			pass

		## Yes, this collision is valid
		return True


class SimpleScenesFrameListener ( sf.FrameListener ):
	def __init__( self, demo, renderWindow, camera, probe ):
		self._demo = demo
		self.probe = probe
		self.rWindow = renderWindow
		self.camera = camera

		sf.FrameListener.__init__(self, renderWindow, camera)

		# slow the window navigation to a reasonable speed
		self.moveSpeed = 6.0

	def __del__(self):
		sf.FrameListener.__del__(self)

	def frameStarted(self, evt):
		result = sf.FrameListener.frameStarted(self, evt)

		#self.rWindow.writeContentsToFile("testfile.png")

		# render window
		self._demo.frameStarted(evt, self.Keyboard, self.Mouse)

		self.probe.frameStarted(evt)
		
		self.adjustCamera()
		
		return result

	def adjustCamera(self):

		pose = self.probe.getActualJointPose(19)
		xAvg = pose[0]
		yAvg = pose[1]
		
		prevPose = self.camera.getPosition()
		xPrev = prevPose[0] - 2
		yPrev = prevPose[2]
		zPrev = prevPose[1]
		
		newPose = [xPrev*0.99 + 0.01*xAvg, yPrev*0.99 + 0.01*yAvg, zPrev*0.99 + 0.01*10]

		self.camera.setPosition(newPose[0]+2,newPose[2],newPose[1])

		oriQuat = ogre.Quaternion(ogre.Radian(-pi/2.0), ogre.Vector3().UNIT_X)
		self.camera.setOrientation(oriQuat)
		
	def frameEnded(self, evt):
		self._demo.frameEnded(evt, self.Keyboard, self.Mouse)
		return sf.FrameListener.frameEnded(self, evt)

# /*
# Create the scene from an ogre point of view
# and create the common OgreOde things we'll need
# */
class SnakeApp(sf.Application):
	def __init__ ( self ):
		sf.Application.__init__(self)
		self._plane = 0
		self._stepper = 0   
		self._world = 0
		self._spot=None
		self._time_elapsed = 0.0

		#self._time_step = WORLD_STEP ## SimpleScenes::WORLD_STEP

		self._looking = self._chasing = False
		self._paused = False
		self.probe = 0

	def __del__ ( self ):
		del self._plane
		del self._stepper
		del self._world
		del self.probe

	def _createScene(self):

		sceneManager = self.sceneManager
		ogre.MovableObject.setDefaultQueryFlags (ANY_QUERY_MASK)
		self.shadowtype=0

		## Set up shadowing
		sceneManager.setShadowTechnique(ogre.SHADOWTYPE_TEXTURE_MODULATIVE)
		sceneManager.setShadowColour((0.5, 0.5, 0.5))
		sceneManager.setShadowFarDistance(30)

		if self.root.getRenderSystem().getName().startswith ('direct'): 
			sceneManager.setShadowTextureSettings(1024, 2)
		else: 
			sceneManager.setShadowTextureSettings(512, 2)

		## Add some default lighting to the scene
		sceneManager.setAmbientLight( (.8, .8, .8) )
		light = sceneManager.createLight('MainLight')
		light.setPosition (0, 0, 1)
		light.CastShadows=True

		## Create a directional light to shadow and light the bodies
		"""
		self._spot = sceneManager.createLight("Spot")
		self._spot.setType(ogre.Light.LT_DIRECTIONAL)
		self._spot.setDirection(-0.40824828,-0.81649655,0.40824828)
		#self._spot.setDirection(-0.707106781,-0.707106781,0.0)
		self._spot.setCastShadows(True)
		self._spot.setSpecularColour(1,1,0.8)
		"""

		## Give us some sky
		sceneManager.setSkyBox(True,"kk3d/DesertVII", 5000, True) # Examples/SpaceSkyBox",5000,True)

		## Position and orient the camera
		self.camera.setPosition(2,10,0)
		#self.camera.lookAt(-7,0.5,0)
		self.camera.setNearClipDistance(0.1)

		## Create the ODE world
		self._world = OgreOde.World(sceneManager)

		self._world.setGravity( (0,-9.80665,0) )
		self._world.setCFM(9e-6) 
		self._world.setERP(0.8)

		## Create something that will step the world, but don't do it automatically
		time_scale = 1.0
		frame_rate = WORLD_STEP

		# max time step
		max_frame_time = WORLD_STEP*2

		stepModeType = OgreOde.StepHandler.QuickStep
		#stepModeType = OgreOde.StepHandler.BasicStep
		#stepModeType = OgreOde.StepHandler.FastStep

		self._stepper = OgreOde.StepHandler(self._world, stepModeType, WORLD_STEP, max_frame_time,  time_scale)

		self.root.getSingleton().setFrameSmoothingPeriod(5.0)

		## Create a default plane to act as the ground
		self._plane = OgreOde.InfinitePlaneGeometry(ogre.Plane(ogre.Vector3(0,1,0),0),self._world, self._world.getDefaultSpace())
		s = sceneManager.createStaticGeometry("StaticFloor")
		s.setRegionDimensions((160.0, 100.0, 160.0))

		## Set the region origin so the center is at 0 world
		s.setOrigin(ogre.Vector3(0,0,0))

		## Use a load of meshes to represent the floor
		i = 0
		for z in range (-80, 80, 20 ):
			for x in range (-80, 80, 20):
				name = "Plane_" + str(i)
				i += 1

				entity = sceneManager.createEntity(name, "plane.mesh")
				entity.setQueryFlags (STATIC_GEOMETRY_QUERY_MASK)
				entity.setUserObject(self._plane)
				entity.setCastShadows(False)
				s.addEntity(entity, ogre.Vector3(x,0,z))

		s.build()

		#yRot = ogre.Quaternion(ogre.Degree(0.0), ogre.Vector3().UNIT_Y)
		yRot = ogre.Quaternion(ogre.Degree(180.0), ogre.Vector3().UNIT_Y)
		zRot = ogre.Quaternion(ogre.Degree(0.0), ogre.Vector3().UNIT_Z)
		#pos = ogre.Vector3(-10.5,0.04,0.0)
		#pos = ogre.Vector3(0.0,0.04,0.0)
		#pos = ogre.Vector3(1.5,0.04,0.0)
		#pos = ogre.Vector3(1.0,0.04,0.0)
		#pos = ogre.Vector3(1.5,0.04,0.0)
		#pos = ogre.Vector3(1.75,0.04,0.0)
		pos = ogre.Vector3(1.8,0.04,0.0)
		pos = ogre.Vector3(1.65,0.04,0.0)

		#self.probe = SnakeProbe(self._world,yRot,pos,40,0.15,0.05,30.0*2.5,0.9)
		self.probe = SnakeProbe(self._world,yRot,pos,40,0.15,0.15,30.0*2.5,0.9)

		self.drawThings = DrawThings(self.probe.robotParam)
		self.drawThings.setSim()

		#currControl = controls.TestJunction(self.probe)
		#currControl = controls.TestMap(self.probe)
		#currControl = controls.TestMapping(self.probe)
		currControl = TestModular(self.probe, self.drawThings)
		
		#currControl = TestAnchorTransition(self.probe, self.drawThings)
		#currControl = TestHoldPosition(self.probe, self.drawThings)
		#currControl = TestHoldTransition(self.probe, self.drawThings)
		#currControl = TestHoldSlideTransition(self.probe, self.drawThings)
		#currControl = TestFrontExtend(self.probe, self.drawThings)
		#currControl = TestPokeWalls(self.probe, self.drawThings)


		
		#currControl = controls.TestBehaviors(self.probe)
		#currControl = controls.BuildMap(self.probe)
		currControl.setRenderWindow(self.renderWindow)
		currControl.setCamera(self.camera)
		self.probe.addControl(currControl)
		
		"""
		WLEN = 3.0
		wall1 = [[-14.0, -0.2], [-4.0, -0.2], [-4.0 + WLEN*cos(pi/3), -0.2 - WLEN*sin(pi/3)]]
		wall2 = [[-4.0 + WLEN*cos(pi/3), 0.2 + WLEN*sin(pi/3)], [-4.0, 0.2] ,[-14.0, 0.2]]
		wall3 = [[0.4*cos(pi/6) - 4.0 + WLEN*cos(pi/3), -WLEN*sin(pi/3)], [0.4*cos(pi/6) - 4.0, 0.0], [0.4*cos(pi/6) - 4.0 + WLEN*cos(pi/3), WLEN*sin(pi/3)]]
		# caps to the corridors
		wall4 = [[-4.0 + WLEN*cos(pi/3), -0.2 - WLEN*sin(pi/3)],[0.4*cos(pi/6) - 4.0 + WLEN*cos(pi/3), -WLEN*sin(pi/3)]]
		wall5 = [[0.4*cos(pi/6) - 4.0 + WLEN*cos(pi/3), WLEN*sin(pi/3)], [-4.0 + WLEN*cos(pi/3), 0.2 + WLEN*sin(pi/3)]]
		walls = envs.WallSections(self._world, [wall1, wall2, wall3, wall4, wall5])
		"""
		
		" junction test "
		
		WLEN = 3.0
		WLEN2 = 5.0
		wall1 = [[-14.0, -0.2], [-4.0, -0.2], [-4.0 + WLEN*cos(pi/3), -0.2 - WLEN*sin(pi/3)]]
		wall2 = [[-4.0 + WLEN2*cos(pi/3), 0.2 + WLEN2*sin(pi/3)], [-4.0, 0.2] ,[-14.0, 0.2]]
		w1 = wall1[2]
		w2 = wall2[0]
		
		wall3 = [[w1[0] + 0.4*cos(pi/6), w1[1] + 0.4*sin(pi/6)], [0.4*cos(pi/6) - 4, 0.0], [w2[0] + 0.4*cos(pi/6), w2[1] - 0.4*sin(pi/6)], w2]
		lp = wall3[0]
		rp = wall3[2]
		
		wall6 = [lp, [lp[0] + WLEN*cos(pi/6), lp[1] + WLEN*sin(pi/6)]]
		wall6.append([wall6[1][0] + 0.4*cos(pi/3), wall6[1][1] - 0.4*sin(pi/3)])
		wall6.append([wall6[2][0] - WLEN*cos(pi/6), wall6[2][1] - WLEN*sin(pi/6)])
		wall6.append([wall6[3][0] + WLEN*cos(pi/3), wall6[3][1] - WLEN*sin(pi/3)])
		wall6.append([wall6[4][0] - 0.4*cos(pi/6), wall6[4][1] - 0.4*sin(pi/6)])
		wall6.append(w1)
		wall6.reverse()
		
		wall7 = [[-4.6+6.0,-0.2],[-4.6+6.0,0.2]]

		"""
		wall1 = [[-14.0, -0.2], [-4.0, -0.2], [-4,-4.2], [-3.6,-4.2], [-3.6,-0.2], [0.0,-0.2], [0.0,0.2]]
		wall2 = [[-14.0, 0.2], [-2.0, 0.2], [-2.0,3.6], [-1.6,3.6], [-1.6,0.2], [0.0,0.2]]
		wall2.reverse()
		"""
		walls = [wall1, wall2, wall3, wall6]
		

		
		#walls = [wall1, wall2]
		for wall in walls:
			for i in range(len(wall)):
				p = copy(wall[i])
				p[0] += 6.0
				wall[i] = p

		#self.probe.addWalls(deepcopy(walls))
		
		#walls = [[[-8.0, -0.17499999999999999, 0.073598276460761752, -0.057218661636925211], [-1.2490009027033011e-016, -0.17499999999999999, 0.073598276460761752, -0.057218661636925211], [0.066145232702983364, -0.14272749639921187, 0.071351139692697227, -0.77313123063654365], [0.13506164315057725, -0.16120758044841371, 0.072412257189520032, 0.13250243505929454], [0.1929852000925176, -0.11775189563647007, 0.064128774804339594, -0.17860812104038604], [0.25360087641386575, -0.096817724002243394, 0.064226875203453784, -0.10069515872776665], [0.31249322296642335, -0.071189945793169424, 0.064453073235867006, -0.33945951797248164], [0.37599874856211585, -0.060178730221631414, 0.064246488597256957, -0.23586096430548395], [0.43782627420809656, -0.042715386625026906, 0.064707053697678443, -0.28529746615669727], [0.50089010716138105, -0.028225535988307064, 0.065421541954816947, -0.35443381961953713], [0.56550999347722775, -0.018015323244542462, 0.064736492154759573, -0.31566684110569787], [0.6290136046934045, -0.0054413509601798291, 0.069494208961164761, 0.24042100507435599], [0.67978761929058362, 0.042008038085660122, 0.066894206986505153, -0.51735678735761603], [0.74668053463584705, 0.041592339920135175, 0.064220610289263513, 0.04216295160117043], [0.80131892628468526, 0.075340420516720519, 0.063223526262516566, -0.0041523589242445525], [0.85658955912463863, 0.10603848916180286, 0.071747352407888834, -0.79809205517171111], [0.92540328376210035, 0.0857319907176744, 0.059463757982008411, -0.14994333885833419], [0.98103006680563287, 0.10674626019273892, 0.057999915044585612, -0.25999900593685982], [1.0372104599685983, 0.12115991931295528, 0.059433846876073927, -0.030959069087182246], [1.0899229456003892, 0.14861490088291512, 0.060380888133578468, 0.012325792512129119], [1.1422182679828565, 0.17879852075716995, 0.063045016377194882, -0.91050420995234205], [1.2003022318177905, 0.15428470352641477, 0.053607695576045264, -0.28499731588324284], [1.2525449668270756, 0.16630475609383488, 0.052774980640155275, -0.69636725563691082], [1.3044172250896295, 0.15658532173212081, 0.054070923233438539, -0.16339144259088156], [1.355251543927201, 0.17501184521422541, 0.051675026871395816, -0.88152336001114795], [1.403422463850398, 0.15630700958510529, 0.048638889372121207, -0.84473052761651002], [1.4493800651876514, 0.14038091657145169, 0.057494392280339042, -0.085508164096283396], [1.501744635654904, 0.16412027004760277, 0.056792713147969368, -1.3630395385157392], [1.5391458596747778, 0.12138198851309612, 0.04519002084123161, -0.71311339536459917], [1.583417308163074, 0.11231684469851377, 0.056638912989416881, -0.23927263374050076], [1.6379759001451815, 0.1275262663033172, 0.053033406461328619, -1.4654222216923452], [1.6686396337856637, 0.08425644263695542, 0.046443668611692024, -1.2923464127887099], [1.7016177188870223, 0.051553839420082515, 0.049728220251300276, -0.610071493186923], [1.7511027937694255, 0.046642296562203762, 0.049158390627444246, -1.5195983600237126], [1.7773124598767736, 0.0050538273475075959, 0.046022610486375896, -1.0215796029930142], [1.817468615751396, -0.017430919067644483, 0.046649655942922599, -1.1521671373407949], [1.85485754149656, -0.045328206233526173, 0.047537779764029932, -1.2439771476661712], [1.8901914728504092, -0.077129995490970216, 0.050825754836377274, -1.0746818516113628], [1.9331580282719529, -0.10428017909799081, 0.052280532917664629, -1.7248673833898149], [1.9514317415183564, -0.15326308965201207, 0.051518824027255695, -1.7106945533781215], [1.9701214936058364, -0.20127228039774192, 0.050677547653443317, -1.5475887779070299], [1.9959306455926444, -0.24488536914285197, 0.062139190214989523, -1.0024571072306514], [2.0507196023327898, -0.2742017328310915, 0.061177019975566606, -2.1192013661680678], [2.0484405177906, -0.33533628563668927, 0.053852440076193032, -1.6857275815799591], [2.0692235674392707, -0.38501676620462311, 0.057568142969475211, -1.4156482075623691], [2.1048049523018202, -0.43027222041974589, 0.057563385195636543, -1.5659354778726062], [2.1332071752651078, -0.48034074392428838, 0.057591881703949403, -1.7669252348317142], [2.1510508322632074, -0.53509865424906133, 0.058948608508967049, -2.0156659676882489], [2.1549546650648264, -0.59391785633987904, 0.059786409477398578, -1.6809529471422404], [2.1782908667420724, -0.64896180650225455, 0.064156184233742364, -2.3343743643460853], [2.1622670218217501, -0.7110846877088064, 0.058845252282980411, -2.0828948722834117], [2.1622107621983364, -0.76992991309797787, 0.06726446246482648, -1.5033141962996655], [2.1989958779486232, -0.82624477055069667, 0.05987593991965702, -2.0062692149554855], [2.2035223436113522, -0.88594937079110125, 0.062173950714427946, -2.3774499877017212], [2.185415491931745, -0.94542829201276446, 0.064472002202355536, -1.7201054866385885], [2.2082379001006496, -1.0057256945550999, 0.061351690450875268, -2.4239873727187224], [2.1876594583283535, -1.0635232520761946, 0.063174367887715174, -2.6114843716685905], [2.1557474826382732, -1.1180450510704327, 0.067071091669808264, -1.7009498652142658], [2.1806871093284239, -1.1803069684705239, 0.057859851964101087, -2.4209400649347188], [2.1614460844387953, -1.2348738579778469, 0.056438197661281268, -2.2725964826361316], [2.1507507812966047, -1.2902893850975135, 0.063934238321613601, -2.915630784574597], [2.1034127230307949, -1.3332625752209806, 0.052927058211737418, -2.3689974508937928], [2.0884273552985282, -1.3840239014928324, 0.054612482349607118, -2.1583209836228558], [2.0842599902691057, -1.4384771502214224, 0.052922400686357368, -2.8004393083141665], [2.0494234709456682, -1.478316796502924, 0.053663127308476645, -2.1686780867814548], [2.0447746047472366, -1.5317781776634856, 0.051998024644529794, -2.280661937474814], [2.0345092718462787, -1.5827528528205241, 0.049631872315563201, -2.9602162553062206], [1.996310587350685, -1.6144417034206087, 0.048446689954635372, -2.4247066938741111], [1.9800278852071744, -1.6600701526432844, 0.056164327474243519, 2.8142383702694227], [1.9248094529040709, -1.6703344799286761, 0.043043526628350481, -2.6028738720338307], [1.9033870605692607, -1.7076684629904788, 0.046055337390897975, -2.4656518516956054], [1.8861455047400835, -1.7503747020519884, 0.054196347805286975, 2.5176726864812267], [1.8322934469749779, -1.7442755226075612, 0.036474664531926514, 3.0965268649338187], [1.7997092346308774, -1.7606666866489324, 0.036867267642840561, -2.8614495986943802], [1.7737940691538625, -1.7868888074965641, 0.034721470425559495, 2.9828619112218084], [1.7412064761180397, -1.7988733512360895, 0.046362747733471196, -2.603536143348117], [1.7181055092345781, -1.8390709843311697, 0.050432542285953723, 2.0610239026501187], [1.675630695516684, -1.8118803329771713, 0.040451570692777668, -2.8943394439848755], [1.6462652694243385, -1.8397012122215044, 0.037375311556487906, 3.0513726382184254], [1.6121523589142523, -1.8549728608055767, 0.041442662915267776, 2.0734555164595418], [1.5769738505806854, -1.8330647148106807, 0.044664245963589103, -3.1181230528311512], [1.53854177036137, -1.8558214737519725, 0.048091734801292758, 1.7644305669530509], [1.5073848780098085, -1.8191872955137331, 0.037010805894302404, 2.3467958829936495], [1.4718530557049203, -1.808829237942954, 0.045249680518694428, 2.8108292366067724], [1.427337516964541, -1.8169471439351239, 0.043634819274708518, 2.4701883662125881], [1.3842618543522849, -1.8099840452246696, 0.044554945153374381, 1.9936870131692273], [1.3484385832268788, -1.7834918504591193, 0.0460352956663935, 2.1704302473994295], [1.307188948717797, -1.7630537463405997, 0.05293570094986582, 1.512140898432943], [1.2840452670819276, -1.7154453601529631, 0.048634699865243103, 1.7120434897806642], [1.2545197712995626, -1.6767985086668742, 0.050930922214068773, 2.1015446108763141], [1.2105480589226818, -1.6510993384814303, 0.054467420475412989, 1.4320542283913811], [1.190729960860494, -1.600365297814015, 0.054677882548853175, 2.0086746407082812], [1.1462852884359065, -1.5685165626256701, 0.056163047269202258, 1.8710064536576638], [1.1055547718679504, -1.5298472867251558, 0.057856083825923312, 1.7647618446325848], [1.0680573135093612, -1.485787474511324, 0.06141692334926397, 1.205726075280148], [1.0591178759435493, -1.4250246163684064, 0.061389283982825872, 1.7461951008216854], [1.0202053058976115, -1.3775435034881882, 0.061225595712652688, 1.242059804438169], [1.0090992189240382, -1.317333633844544, 0.066267873389527221, 1.7179713820555373], [0.96855740510478627, -1.2649142445328061, 0.074069517465081863, 0.69680423556803095], [0.99484762015244033, -1.1956674539193908, 0.073560401188646693, 1.7656290453232224], [0.9471233791122845, -1.1396895168354311, 0.073393746397829446, 0.59981809026979838], [0.62266298088946115, -1.177015319087007, 0.088327806873495562, 1.021165789007028], [0.64271261238509536, -1.2613825808329906, 0.08671691056320012, 1.2929728433887271], [0.63811308369861364, -1.3500730922854878, 0.088809698151965918, 1.0078398230185248], [0.69704905528426508, -1.4201024932395283, 0.091529043176067693, 1.7592445587296064], [0.70043128292708123, -1.506272132729443, 0.086235991521230487, 1.0988845078125749], [0.7281734993486676, -1.5834030735199538, 0.081968363404495134, 1.4049233482489896], [0.77701316176334256, -1.6483930471682926, 0.081295813542833911, 1.7041112823704141], [0.81724841703726858, -1.7156835477697416, 0.078402086950230945, 1.5985525890613799], [0.84949448493984847, -1.7876180316023222, 0.078831331711684202, 1.4810681310395943], [0.89037589488512858, -1.8533501983026059, 0.07740805783784975, 1.6160490907361555], [0.93986737505128948, -1.9110239338191102, 0.075997805083207554, 1.7688480717048396], [1.0079369815602932, -1.9473164316050189, 0.077140240638921803, 2.140622007801595], [1.0621365776571945, -1.9950114679824993, 0.072197040881994884, 1.9088016419275811], [1.1088428289383574, -2.0525095843572783, 0.074077711191604723, 1.7418554819927887], [1.1854032323313703, -2.0627646043599519, 0.077244163552698808, 2.4972959472301479], [1.2392124499042696, -2.107388267163337, 0.069904958177498991, 1.93810048521659], [1.2936811747004844, -2.1547292399337654, 0.072166541303960399, 1.9149484968094086], [1.3665013610726395, -2.1524569012835362, 0.072855631671249158, 2.6616448366230196], [1.4310472316833527, -2.1670065732014159, 0.066165416690389403, 2.4087398077013042], [1.4940634867189113, -2.188911904573037, 0.066715005367661603, 2.2959025568800118], [1.5603785007419588, -2.1786794875305442, 0.067099802111544829, 2.7835429723787577], [1.6239700390028422, -2.167909729611778, 0.064497065235669573, 2.7982166315669801], [1.6897530522470281, -2.1890534103456529, 0.069097467873003748, 2.3194637267962097], [1.7557018506909037, -2.1881387252397251, 0.065955141308573523, 2.644318904569765], [1.8156329607659636, -2.1604703752555614, 0.066009662517506701, 3.0629657506982513], [1.8826574352586807, -2.1550450150726936, 0.067243696463971755, 2.7112200242172015], [1.9358372815981819, -2.1144306733742773, 0.066915026774923211, -3.000512924933243], [1.9982519757906141, -2.0931609427105906, 0.065939331916850627, 2.9588884192464802], [2.0368054908840882, -2.0341787547127033, 0.070464686383186592, -2.6608733774588536], [2.0877477897755288, -1.9959405228786888, 0.063696783200855395, -3.0088383089450992], [2.1608819922430946, -1.9800753692117414, 0.074835250192959085, 2.8440722963684539], [2.2036588663763128, -1.928469953002977, 0.067029694484526725, -2.7740681305154014], [2.2258186307881003, -1.8601668324109037, 0.071807878686124788, -2.3956575028904838], [2.2866029412300271, -1.8228760646423856, 0.07131152611370857, -3.1024531197235383], [2.3148100061669474, -1.7604457040249382, 0.068506849578565149, -2.5063022855170107], [2.3558091278638225, -1.7057337154561534, 0.068369069564138421, -2.7250319027827903], [2.3957751604361919, -1.6487650583120348, 0.069589594454773598, -2.6937004186350917], [2.4265610809160254, -1.5860091354173345, 0.069900491830574243, -2.5380107571021373], [2.4196682458496359, -1.5081602137650907, 0.078153475787515136, -1.9936279274553796], [2.4614733595217926, -1.4487350486837181, 0.072656849464385317, -2.695004393463813], [2.4577209177919066, -1.374232666448937, 0.074596821497927068, -2.0316146023128652], [2.5061800065437105, -1.3131414480651031, 0.077977049484296804, -2.7525350527810741], [2.502515903202946, -1.2391105187689793, 0.074121549806648521, -2.0324849440423693], [2.5344464231832937, -1.1710814853113065, 0.075149900195546307, -2.520780339275988], [2.5083415537074858, -1.0951559775182502, 0.080287900358537223, -1.7507782327451289], [2.5463059356972013, -1.0253819380042293, 0.079433688633760283, -2.5802446068614033], [2.5483496862761479, -0.95204339329332821, 0.073367016136284033, -2.1097989468421376], [2.5278649979690582, -0.87900419001823138, 0.075857416711218914, -1.8085021627972699], [2.5257164834215646, -0.86443215614267144], [2.5591341717563365, -0.88506361219587615, 0.027116973560127974, 0.35345501011696412], [2.5767316343397235, -0.86443209345180505, 0.026997807041271204, 0.26973956745922872], [2.5959079858697072, -0.84542816946131771, 0.027857823338617929, -0.75943988386374839], [2.6229114723729778, -0.85227433903512539, 0.024134966951861653, -0.36171629464449268], [2.646777495284093, -0.84868134861298694, 0.028401259830132364, 0.22262392049321253], [2.6678699016771938, -0.8296618335695648, 0.027361319520904991, -0.75868457149414936], [2.6943971822881565, -0.83636595090984933, 0.027494264839464991, 0.035126815702642547], [2.7178901675519138, -0.8220825954756551, 0.027119022445062584, -0.099420286189954132], [2.742742934069244, -0.81122988268986318, 0.026964536767052353, -0.60232262256790303], [2.7695954593530283, -0.81368510751570799, 0.026912685247974927, -0.50477719691456702], [2.7965075993936903, -0.81351380168294052, 0.04061055227437689, -1.2889271545764449], [2.8254413909804703, -0.84201033937513547, 0.029388699186919734, -0.085599729528721538], [2.8522090534317361, -0.82987823787562831, 0.027870211101325201, -0.46451446382343564], [2.8800489727009078, -0.82857917593775687, 0.031134190644746085, -0.060297552002776096], [2.9080722121118812, -0.81501319348093937, 0.028875702390739954, -0.43041798422709687], [2.936853882119189, -0.81268474761534149, 0.031527471192798293, -0.11851797312052353], [2.9659823670753127, -0.80062187880342062, 0.047851078446883147, -1.4192320581952802], [2.9954228826963876, -0.83834430911344959, 0.036540162584714993, 0.10508770315825169], [3.0252419596470728, -0.81722545186390783, 0.03630291814584146, -1.1232756030737721], [3.054953144934351, -0.83808563725926566, 0.031129742357422201, -0.27792217993812329], [3.0852401177075306, -0.83089118526650541, 0.030940555876427973, -0.34451027275761209], [3.1157521143004976, -0.82575931797933155, 0.031271438678511503, -0.74886742842954102], [3.1461440827772242, -0.83312349676135, 0.039574273065598992, 0.14115371944814831], [3.1775934437376363, -0.80910140726330015, 0.030897822428784638, -0.54105148360909061], [3.2084774474007336, -0.81002539242471039, 0.035572623962373498, -1.0631874633691991], [3.2387658952424356, -0.82868072686044092, 0.031830158862708631, -0.31955443753738128], [3.2700136602391634, -0.82261968768101845, 0.03107782091439092, -0.49562529613764422], [3.3010877397209111, -0.82213746662277598, 0.039254105918635138, -1.221622184355146], [3.3308442795559001, -0.8477388956555495, 0.034938108578974454, -0.080212391403479813], [3.3625882633679156, -0.83314468711864309, 0.030912669567915597, -0.5450859643571172], [3.3934831264779324, -0.83419376920716781, 0.030888140445873, -0.51464861718532284], [3.4243710770705968, -0.83430206689459852, 0.031545071924140147, -0.81376624412915055], [3.4544826724042332, -0.8437033109166675, 0.031777357923109831, -0.31502928198913221], [3.4856509016018773, -0.83751122199155048, 0.037916126227440665, 0.03502363144738551], [3.5180510722056608, -0.8178170204860068, 0.045863063350611362, -1.4547159989846148], [3.5449680327717625, -0.85495053383695596, 0.032304373414159204, -0.24175404078937113], [3.576107311399606, -0.84635298370805512, 0.033232255335993124, -0.1828875317305706], [3.6075651760929013, -0.83563918215795374, 0.038662185826186829, -1.3333639815869924], [3.6338784775559945, -0.86396540285487988, 0.039163599097483834, 0.065217824835763841], [3.6667152654618689, -0.84262218720463056, 0.029464351349626022, -0.69808874807379639], [3.6956662411742971, -0.84809840905483147, 0.029218175298128254, -0.70697769250014053], [3.7243259254296364, -0.85378385240925836, 0.030314825145192254, -0.4061470580826963], [3.7544738081074973, -0.85060677928678541, 0.03651032351980342, -1.3807682703891466], [3.778027075101638, -0.87850386403454028, 0.028743033635017984, -0.92737169333641589], [3.804316029236837, -0.89012508914298694, 0.028996287836033287, -0.48534930184021524], [3.8333026721622678, -0.88937726551162, 0.027850337160040581, -0.74086460825918621], [3.8604213728055461, -0.89571898100099767, 0.02840228516974784, -1.0360497235356119], [3.8849998705658564, -0.90995229581906079, 0.028700678008876362, -0.51177728003194789], [3.913700542792049, -0.90997051487118152, 0.027604880681617244, -0.70731450194299461], [3.9407759590494473, -0.91535115348894214, 0.027738194717125436, -0.69151464726464629], [3.9680641569385373, -0.92032726664390829, 0.037572943296485299, -1.6560184069135289], [3.9835877615512487, -0.9545433997946472, 0.045684602973968896, 0.026199853499599583], [4.0228341270914871, -0.93115952199879837, 0.030527809514177207, -1.3996831373661722], [4.0420832961470925, -0.95485375430125108, 0.035672934264368704, -1.6815788935550311], [4.0559868159822461, -0.98770570059402762, 0.03767564784701434, -0.21525056867246087], [4.0920251723366441, -0.97671974082868773, 0.038990443300953012, -1.8204551274670904], [4.1021047511449158, -1.0143848010284626, 0.028584634361269658, -0.7007630016077635], [4.1301770297515574, -1.019772610917334, 0.028859425782113823, -0.74702708052893929], [4.158237279996011, -1.0265171503895258, 0.027805976313796041, -1.1725504034650869], [4.1801797608721731, -1.0435963731986193, 0.036837535013768366, -1.840265784824116], [4.1889959911501649, -1.0793633701312111, 0.047786000119202407, -0.20469883559632621], [4.2345557581572937, -1.0649477731040837, 0.030108940150901216, -1.4492971396365255], [4.2523584892921393, -1.0892296807958401, 0.031229406060988694, -1.5626914128298623], [4.2678553598825939, -1.1163428289867978, 0.030221937233809577, -0.99386970337619474], [4.2946239044384109, -1.130371745998725, 0.030143387587617147, -1.1575468858777962], [4.3186860039109831, -1.148527714279963, 0.033817174630859578, -1.7069259802498344], [4.3310727097544977, -1.1799946940899211, 0.03394106576401907, -1.7159007384166027], [4.3432208549714808, -1.2116872565136914, 0.031587308783828143, -1.1211079077013988], [4.369111955674275, -1.2297817026395788, 0.041433672968774198, -0.61430487940267087], [4.4103253455993254, -1.2340485218962536, 0.04192764045836006, -2.0043953428907204], [4.413573303001499, -1.2758501702742684, 0.032902322425320096, -1.3943880088856415], [4.4344546415493644, -1.3012771740582212, 0.049982490535205891, -0.50565778115223714], [4.4844363803004601, -1.3010030362841334, 0.035927208898085906, -1.6653703917106826], [4.4989734171601157, -1.3338578517386102, 0.038434654582299152, -1.8082923193045393], [4.5093601534405234, -1.3708624241898881, 0.040865901359092391, -0.81634504471146507], [4.5483374823514007, -1.3831420709626738, 0.035539758139397595, -1.3001219890931133], [4.5733777248214267, -1.4083623141345623, 0.037024327823931551, -1.106514760471828], [4.6040316385690625, -1.4291261871539787, 0.036356098773907504, -1.2630156765294029], [4.6305865237905603, -1.4539576991685783, 0.037802959683028894, -1.5982029802453375], [4.6481682875243324, -1.4874232836518426, 0.039187249772900952, -1.6620002312398037], [4.6641451005324051, -1.5232057093782916, 0.037818007422163021, -1.4213580422868852], [4.6873493053042461, -1.5530681701993492, 0.038099804270217058, -1.2954272375737976], [4.7143199145442809, -1.5799787874841726, 0.046500233008018588, -0.66876921863483352], [4.7602436659033698, -1.5872781525872877, 0.040467174647009344, -1.5589863281932677], [4.7804545993043632, -1.6223368233403581, 0.039439546902358034, -1.0848348880910104], [4.8135799812886697, -1.6437421247457824, 0.03968580324853032, -1.2014384833975222], [4.844180020190084, -1.6690126727951027, 0.054187925050191953, -1.8232575727104021], [4.8580416106495399, -1.7213976661727823, 0.043436508587440859, -1.0940905288838794], [4.8943042939752432, -1.7453089203491434, 0.046601191705977991, -0.68039810951834712], [4.9402395746438561, -1.753158828521415, 0.045053773651177721, -0.86142541216003998], [4.9825574876292666, -1.7686196422377358, 0.046215818236060933, -0.78744622213270443], [5.0270203562363065, -1.7812273847185185, 0.048603385956208479, -0.48740717125544714], [5.1226169954153473, -1.4611003710168309, 0.020579424188947031, -0.054490144492980404], [5.112396190252964, -1.4397332688565589, 0.023685816703143112, -1.6357663694132889], [5.090867923619415, -1.4440866432170154, 0.021964019044051025, -0.31161642421333219], [5.0695248247758329, -1.4409122340521077, 0.02157787621136972, -0.65879244318285413], [5.0646599092491291, -1.4078336358260808, 0.033434429315914289, -1.9359142503089208], [5.0326473499525193, -1.4131662438210024, 0.032453669449639788, -0.34607947428632341], [5.0290421977244115, -1.3771473096509512, 0.036198905250494844, -1.9821805807598498], [5.0115175622670725, -1.357702597281562, 0.02617651021509361, -1.3484310215928266], [4.9929439871729642, -1.3373548675242664, 0.027550096153233432, -1.3420922402585469], [4.9687653205717979, -1.3208082492434348, 0.029298438442038742, -1.1112862214925128], [4.9434895204479172, -1.3031806219217226, 0.03081556939106497, -1.1201289182440246], [4.9146736625786742, -1.287035049029297, 0.033030791524954924, -1.0218604181181385], [4.9067275293432271, -1.2500255158887676, 0.037852959946025735, -1.870444598043044], [4.8670639929168367, -1.240955075155346, 0.040687455277346955, -0.7359612214202248], [4.8349059910903396, -1.223767311406299, 0.036463081386054398, -1.0019910294980761], [4.8355094138995405, -1.1767112461415208, 0.04705993409780504, -2.0947615950859029], [4.7905452604994894, -1.1692898171280459, 0.04557249937830269, -0.67471984554163589], [4.7732342347322092, -1.1368761175136717, 0.03674669421602831, -1.5914119429382723], [4.7478289800126001, -1.1111639427459712, 0.036146132554576833, -1.3025447912735788], [4.7420385410813584, -1.0673154471490416, 0.044229173055014101, -1.950642914068659], [4.7044218789276906, -1.0519596433215148, 0.040630210223092753, -0.89871332725484154], [4.6820480952469996, -1.0224445871311547, 0.037036802482266991, -1.4333078306033422], [4.646066078148567, -1.0057887682234825, 0.039649991903619307, -0.94466624008311084], [4.6169796545720478, -0.98271532862192201, 0.037126858896485884, -1.1817673804830267], [4.5899951624744801, -0.95763415224564097, 0.036840578472409992, -1.2600008586076092], [4.5873515606379076, -0.90664196017107412, 0.05106067256940347, -2.0301419164921746], [4.5650776519593732, -0.87543559258001202, 0.038340114580530105, -1.4620364217418063], [4.5067122943969498, -0.88541037494210861, 0.059211580341692827, -0.3418753608909828], [4.4787206772214905, -0.86186276921842719, 0.03657896072082132, -1.2105275790587959], [4.4600586870205881, -0.82664124863359845, 0.039860072636237844, -1.5947002813957309], [4.4377530255366082, -0.79515730358763237, 0.038584729231850808, -1.4655459905384371], [4.3935441029571569, -0.79346105862279048, 0.044241452085309628, -0.54949251042922831], [4.3672666712809063, -0.76767136956741699, 0.036818629483901986, -1.2871733479187504], [4.3336420688512058, -0.75292727115137226, 0.036715151186635112, -0.92438473487242778], [4.305012529751794, -0.73072958022796175, 0.036226895966615394, -1.1706663330532145], [4.2750299138508074, -0.71070862228549647, 0.036052683855714251, -1.0998962398637326], [4.2606664752223402, -0.66146100318205014, 0.051299477157100329, -1.7981531287104782], [4.2117067850710086, -0.67716533871525419, 0.051416703650213315, -0.20074981857539101], [4.1855446127522233, -0.64901623000362252, 0.038429566504152329, -1.3331085697099643], [4.1635606277964285, -0.60977881933282319, 0.044976327003052895, -1.5712364195894435], [4.1157992010228135, -0.6304258441274021, 0.052033196330029972, -0.10310918942428381], [4.0837881125124511, -0.61515486643315287, 0.035467062852123601, -0.95626434523846005], [4.0538442189386883, -0.59394973049916822, 0.036691886737201106, -1.1273255090395315], [4.0221670292434126, -0.57694150722702953, 0.035954471291696287, -1.0038906506210072], [3.9857043658385822, -0.57529081364939916, 0.036500008381658629, -0.55638238611933466], [3.9483726655882978, -0.57872196397717734, 0.037489046882374852, -0.41949014840310489], [3.919622156812566, -0.55126947175064867, 0.039752120500811602, -1.2734496064686975], [3.8815758378223357, -0.56059283031180895, 0.039172023225336881, -0.27082536373617822], [3.8484498721969227, -0.55078494010277212, 0.034547421162346895, -0.79899781208991372], [3.8165703455514395, -0.53472870353433077, 0.035694634777258004, -0.97770865528168305], [3.7866251337172403, -0.50674104454622604, 0.040988105194428137, -1.2627634797987628], [3.7506428908180736, -0.51215564661869839, 0.036387356590687453, -0.36178329131399872], [3.7178856919146761, -0.4990871143233967, 0.035267841107021344, -0.89074462056904369], [3.6813322588588657, -0.51346212462819707, 0.039278421422311707, -0.13645975108740913], [3.6488676396901973, -0.49960755562036596, 0.035297316897456084, -0.91450209270361349], [3.6144166221394718, -0.50271744979717814, 0.034591097873172078, -0.42111646282547122], [3.5823799734677646, -0.48471589244631652, 0.036747828849753354, -1.0230799435877611], [3.5496279346833735, -0.47294636609361385, 0.034802554433564392, -0.85612471741498886], [3.5146887648500469, -0.48750479760909926, 0.037850938123554494, -0.11634053513676536], [3.4819697261035216, -0.4781711705457995, 0.034024286776556611, -0.78902757850648375], [3.4484289956416698, -0.48154294624426075, 0.033709783020294024, -0.41095128970080103], [3.4142895215860367, -0.49807787890118715, 0.037932936701030137, -0.060105453611898313], [3.3828074473720955, -0.47359797045113006, 0.039879655396395736, -1.1720639389297327], [3.350378562863396, -0.46562063054283553, 0.033395665923754647, -0.75234809577652384], [3.3174552479924628, -0.46998259828221156, 0.03321101360467605, -0.37942090757962132], [3.2840887530456557, -0.48923750321914061, 0.038523685560515934, 0.012248349870772751], [3.2517182145718886, -0.49006066683441196, 0.032381003063820107, -0.48571855648666395], [3.2203934035640032, -0.46435181577729601, 0.040523928824297027, -1.1983895892025713], [3.1879652264491773, -0.47209506601228546, 0.033339834960481873, -0.2767499165284194], [3.1564452359967587, -0.45229578938147508, 0.037222589286936066, -1.0720036402904503], [3.1243568287305683, -0.45436735019036523, 0.032155205567152637, -0.44667402838344483], [3.0916422577305402, -0.4940065701171682, 0.051395631255208032, 0.36967047456029739], [3.0600803112247017, -0.48241719141879436, 0.033622465195933489, -0.86305263300462187], [3.0285100151114586, -0.46413609443792858, 0.036481256879412297, -1.0360226403427524], [2.9966733730712156, -0.46693315988407191, 0.031959276454710264, -0.42351069527875473], [2.9649116721404258, -0.4872767963903698, 0.037718287239975216, 0.05853129858328282], [2.9330624092691946, -0.47630401087315211, 0.033686459704867645, -0.84292920164710605], [2.901474661588169, -0.49129620730163504, 0.034965007612044567, -0.068003732901051051], [2.8684847068687995, -0.45478385297617374, 0.049208628621148297, -1.3471776491600911], [2.8370272396549536, -0.47797713820910726, 0.039083253746411764, 0.12417466585065146], [2.8038475981852762, -0.4645120820984715, 0.035807769326208078, -0.89665844523759808], [2.773465003391979, -0.49928390421113311, 0.046175552832730435, 0.34152058164993859], [2.7406404110766642, -0.49807399023686749, 0.032846883451733068, -0.54798578983939517], [2.7044749759281919, -0.47154713608929499, 0.044851005456343608, -1.1439908378206298], [2.6709041303842893, -0.47734085630037304, 0.034067122925436434, -0.34024402682253801], [2.6345264741985392, -0.46875307828297375, 0.037377584202898391, -0.74297093181916241], [2.6031394461810544, -0.49353147508732476, 0.039988929417581136, 0.1571305285523216], [2.5671542652965558, -0.49578278309676682, 0.036055535373135772, -0.44866182984905906], [2.5327758299856611, -0.50850610970791721, 0.036657330160274421, -0.15667799472451602], [2.4930606902277379, -0.50538847999324443, 0.039837318446767633, -0.58948161370726382], [2.482910307135243, -0.51969278937610508], [2.4402518858947011, -0.38306211163330239, 0.072828769427065107, -1.6117280967880576], [2.4251629905217853, -0.31309231032154083, 0.071578263873763995, -1.8695427136126612], [2.3933912068199334, -0.24959029246896802, 0.071006707506725927, -1.6180295157126758], [2.3623868116259432, -0.18670987836445474, 0.070108622859818337, -1.6238512031928127], [2.3615878325383886, -0.10836562372533687, 0.078348328651868943, -2.0717408539658182], [2.303327863325654, -0.0608138694499104, 0.07520234934720664, -1.1956833776030678], [2.2829495965988444, 0.0084942430268303351, 0.072241872967674009, -1.7959733206027657], [2.2339762487267758, 0.058660466872623052, 0.070107337823831509, -1.3085723565474345], [2.1931740054412305, 0.11388530875225999, 0.068662990160375054, -1.4456193699198967], [2.1633067766141041, 0.17952817654316755, 0.072118218569419024, -1.6549381543036465], [2.1100647459861728, 0.22392609183688272, 0.069324517364446545, -1.2062082913670342], [2.0541845921776019, 0.26398059039409871, 0.068752850445196703, -1.1330501789295222], [2.0037259495286461, 0.30988693577940862, 0.068216326232144409, -1.2493355840842171], [1.9370713716726238, 0.33212298688152531, 0.070265743558155819, -0.83313415307075722], [1.8837028179235893, 0.37308783054758565, 0.067277938032079709, -1.1658026494009381], [1.815862430222597, 0.3867788404436231, 0.069208106139341169, -0.71027982261106792], [1.7681870368945491, 0.44366615995684422, 0.074223380752855783, -1.3844133079516943], [1.7002728867933632, 0.45449919309399356, 0.068772715454001043, -0.66932061705593626], [1.6363688868362174, 0.47475613672102523, 0.067037787669579366, -0.81811285079545248], [1.5746652599315039, 0.50736746706258062, 0.069791377976381685, -0.99734149192641919], [1.5028295655022881, 0.48927440275526601, 0.074079187159122165, -0.26440711151656127], [1.4382279624819949, 0.51441243360360345, 0.069320182542485412, -0.88223793789444604], [1.3700598045568837, 0.50939330242947245, 0.068352684165627675, -0.43764642975365603], [1.3022573418467558, 0.5402564588763924, 0.074496364847053673, -0.93830590099069189], [1.2339923412562794, 0.51891854960391492, 0.071522141171375925, -0.20818960125433364], [1.1639794715408156, 0.52992777717236761, 0.070873161474908686, -0.66711111684689628], [1.0972447238706895, 0.50502604735087375, 0.071229366799783464, -0.15399920683340917], [1.0307123962245599, 0.48492072190928559, 0.069503774955926717, -0.21767881223286467], [0.96662666471564651, 0.45533377159218047, 0.070585895277309879, -0.078619964616428908], [0.8970861698907997, 0.45189455004271017, 0.069625488618399609, -0.46172636216376972], [0.82511461070024938, 0.45460367883576747, 0.072022529191470869, -0.54876637949168117], [0.7597625634393973, 0.43203008655712039, 0.069140850078280316, -0.17855791962356801], [0.69617418642405249, 0.40557504148970103, 0.068871990685363704, -0.11688897820024438], [0.6348668333401235, 0.3746743293032847, 0.068654537765433107, -0.044276504724609943], [0.56886658351421204, 0.36022797682015173, 0.067562786185515131, -0.29565757596947051], [0.50452206011415957, 0.34367455164892458, 0.066439698798830535, -0.25934040725863916], [0.44064057820171537, 0.32955164319998009, 0.065424003808901857, -0.29356241529842109], [0.38503750851038376, 0.29719409661192187, 0.064332823506336512, 0.01589035331004527], [0.32373212183493344, 0.28691396221683407, 0.062161335238293841, -0.34500092930230741], [0.27530716790749349, 0.24605139312222316, 0.063361863260849041, 0.18976034388943502], [0.22428769051478994, 0.2198271791655334, 0.057364592485877809, -0.036354566236827597], [0.17180697294467548, 0.20856371064436399, 0.053675799386702118, -0.29972852696474489], [0.1208449096972796, 0.20764526272573486, 0.050970338796311854, -0.49312224695959606], [0.073710256375388028, 0.21507438201042095, 0.047716531277126585, -0.6674712292453282], [0.035560856743905508, 0.19734884664526642, 0.042066272668539351, -0.07618519846148876], [0.0, 0.22500000000000003, 0.045046207545225883, -1.1720578961124044], [-8.0, 0.22500000000000003, 0.045046207545225883, -1.1720578961124044]]]
		
		#walls = [[[-8.0,-0.15],[0.0,-0.15],[0.1,-0.25],[2.0,-0.25],[2.1,-0.35],[4.0,-0.35],[4.1,-0.45],[6.0,-0.45],[6.1,-0.55],[8.0,-0.55]],[[8.0,0.55],[6.1,0.55],[6.0,0.45],[4.1,0.45],[4.0,0.35],[2.1,0.35],[2.0,0.25],[0.1,0.25],[0.0,0.15],[-8.0,0.15]]]

		
		" wobbly walls, curvature test "
		#walls = [[[6.89713661206, -5.66561062189, 0.24785753498134197, -1.5109569205313309], [6.8241517119, -5.44133868031, 0.23584889109403384, -1.0825876596236035], [6.90974230088, -5.1869941312, 0.26835964411070223, -1.7218194876345572], [6.74684126752, -4.99084861917, 0.25497021111463414, -0.70413835356226928], [6.7981173201, -4.74709754961, 0.24908596403833969, -1.6045479942862555], [6.6588994767, -4.55607205709, 0.23637332064884961, -0.76741953146669328], [6.51820501888, -4.37260091024, 0.23120681691414346, -0.74301192422482298], [6.51856746182, -4.14991692188, 0.22268428331215911, -1.3988363709960387], [6.42882138554, -3.95923992868, 0.21074172330951529, -0.95729865666946523], [6.4437259694, -3.73288257475, 0.22684752213712564, -1.4629592187303215], [6.36184984128, -3.54437246979, 0.20552313745644871, -0.98745975135285557], [6.23945850024, -3.37695252482, 0.20738630218531304, -0.76595030092700478], [6.09921472391, -3.22348587441, 0.20789499653697213, -0.65680032352478357], [6.12175071734, -2.99356994889, 0.23101775648241607, -1.4949150609245985], [6.07551508786, -2.79567131389, 0.20322795862302798, -1.1676927599007694], [5.80371644378, -2.72873963638, 0.27991847451904373, -0.067862959256361016], [5.69306677792, -2.57717830937, 0.18765442814230615, -0.76658840560181862], [5.71128501393, -2.34176281058, 0.23611937912146727, -1.4744424079680583], [5.54885903977, -2.22721419158, 0.19875508344200657, -0.44064375145067408], [5.38932493391, -2.11750062715, 0.19361869009713004, -0.42884391727482452], [5.31556424911, -1.94302098725, 0.18943015430245297, -0.99724826124458976], [5.26373154799, -1.74502967833, 0.20466359548535537, -1.1411621471966282], [5.07072842265, -1.67427628895, 0.20556324695108996, -0.17779135270718005], [5.0176058058, -1.46915201647, 0.21189143347691725, -1.1437984885315977], [4.87296885201, -1.3538613129, 0.18496430664331243, -0.49938506556454787], [4.71559083835, -1.2549333914, 0.18588860329443913, -0.38759679139575448], [4.53168633274, -1.19260035973, 0.19418103414887583, -0.15320261209418212], [4.45014159099, -0.995355535151, 0.21343632710659885, -1.0051881424526683], [4.27963330182, -0.915295832213, 0.18836834317260706, -0.26539283580628281], [4.10167680739, -0.849219033873, 0.18982796735230026, -0.18194299420329721], [3.92503600282, -0.783615317058, 0.18842988483853026, -0.18201983793850754], [3.77826172908, -0.662271610035, 0.19043892108802737, -0.51724507879628634], [3.65499814439, -0.481642991134, 0.21867923832985683, -0.7983829182172768], [3.4253540408, -0.519587600577, 0.23275783059355615, 0.3373402598620559], [3.27165086034, -0.384892437471, 0.20437087523695768, -0.54599688649071842], [3.09580643386, -0.290966677883, 0.19935724376297634, -0.31699854097398589], [2.88006455621, -0.304022207808, 0.21613654164005794, 0.23402844268071704], [2.67432985484, -0.290203574913, 0.20619825888009988, 0.10652105586515677], [2.48224692693, -0.222738140667, 0.20358643375424129, -0.16418328523496706], [2.30645300363, -0.0667522417068, 0.23502149719817805, -0.55217906259275129], [2.0912130176, -0.0541290021936, 0.21560982760647221, 0.11500738722041563], [1.88500208371, 0.021004290032, 0.21947200472925255, -0.17581503454269459], [1.67530985111, 0.112274243425, 0.22869419932264154, -0.23693844192417901], [1.42864517932, -0.0313331428735, 0.28542344281648224, 0.70081362224649324], [1.21757362317, 0.130450374512, 0.26594192657693183, -0.48038173500926434], [0.976750147272, 0.0594582283283, 0.25106937560040643, 0.46025692809620605], [0.744519524022, 0.145671326421, 0.2477170980329105, -0.18188184728438828], [0.497741860969, 0.059557941025, 0.26137086701895479, 0.50932782225887885], [0.250712493309, 0.0236477085096, 0.24962582656009352, 0.31794465764303342], [0.0, 0.0125, 0.25096020741543767, 0.21802240999427072], [-8.0, 0.0125, 0.25096020741543767, 0.21802240999427072]], [[-8.0, -0.2375, 0.30300632406581263, -0.47034371381816614], [0.0, -0.2375, 0.30300632406581263, -0.47034371381816614], [0.242326830198, -0.419408053121, 0.24064868479792056, 0.31642809118957987], [0.480524658816, -0.385150441756, 0.23587852483141811, 0.29471430097558599], [0.7146749304, -0.356649059437, 0.23769857348480375, -0.19992236744789607], [0.935984748056, -0.443381847043, 0.22158207316365433, -0.0097349078800936274], [1.1538538685, -0.483775677046, 0.24160824063768785, 0.51714928592812504], [1.38134274111, -0.402391681169, 0.22265096046906507, -0.27159142873004249], [1.58229271433, -0.498269512076, 0.20935700691984246, -0.15959801725288372], [1.78013619111, -0.566740783731, 0.22279108595498778, 0.41262698724922686], [1.99659240384, -0.513990656211, 0.20805775460929393, -0.34285250930915723], [2.17751579313, -0.616727000617, 0.20108826926316684, 0.18441569681185893], [2.37859227386, -0.614549632977, 0.1986038796257289, -0.38352896670747022], [2.54716391928, -0.719559638993, 0.18635458922667528, -0.10072975809353976], [2.72655077602, -0.770041205479, 0.18341806769950758, -0.24865129671941094], [2.89385991957, -0.84520661005, 0.19278692198705649, 0.16901218226509346], [3.08664482364, -0.846088681019, 0.19549086598436111, 0.17820396315719511], [3.28213360657, -0.845186220643, 0.18051806245747723, -0.42178477827811689], [3.43159168417, -0.946423831794, 0.18109471774646069, -0.054741191865903392], [3.60798627701, -0.987414616285, 0.20319724284019314, -0.87929992815900249], [3.7085819774, -1.16396382914, 0.17393757391221121, -0.61178611609702394], [3.83157742646, -1.28695325604, 0.18624573124232888, 0.052594125862925591], [4.01646155597, -1.30943282591, 0.17250546724429636, -0.22188619650029992], [4.17565204267, -1.37588976817, 0.18508056447919094, -0.91499511645720533], [4.2614815876, -1.53986569495, 0.165952201524284, -0.63298221549521327], [4.37631699873, -1.65966954106, 0.21604325759752341, 0.14892306276706016], [4.59229454603, -1.66499760033, 0.17271259776252598, -0.80566149430804368], [4.68860704284, -1.80836267412, 0.21216691203684418, -1.2905567235224151], [4.71119220306, -2.01932406656, 0.16380659988228116, -0.63632924421549331], [4.82414646655, -2.13795768965, 0.1656166033769273, -0.59911253845720969], [4.94273266096, -2.25356985946, 0.16666976627162552, -0.68201770397903394], [5.05202830537, -2.37940019405, 0.1743386675534454, -0.5019510463153829], [5.18807701684, -2.48841725285, 0.18182893285748522, -1.146678544651335], [5.23315562003, -2.66456968786, 0.17229195064423009, -0.9538083269255645], [5.30707120059, -2.82020067194, 0.26400395734459625, -0.0079346824559171324], [5.56673757968, -2.86786051948, 0.18154091480465775, -0.97866231228880374], [5.64052176226, -3.03373094526, 0.18322726719937588, -0.86222790563125817], [5.73393552499, -3.19135740363, 0.26023647763310404, -1.7295854934297927], [5.64902280849, -3.43735101101, 0.1842817150556364, -0.89255523294068162], [5.73812378952, -3.59866054477, 0.18718461438862505, -0.97540017614375485], [5.8147592642, -3.76943842356, 0.24864872568310079, -0.33393332302588158], [6.03206633279, -3.89028471737, 0.27050262068053155, -1.807167735285254], [5.92425164292, -4.13837272684, 0.20509837900940195, -0.79419142064819559], [6.04056913131, -4.30729752361, 0.23883674579235817, -0.53669950768529495], [6.22164911436, -4.4630313699, 0.26336914478588253, -1.7813885096950792], [6.12293867426, -4.70720253003, 0.2090119733793209, -1.0866872559201393], [6.18680337838, -4.90621837007, 0.21536452414075913, -1.3136813027167624], [6.2047713195, -5.12083204938, 0.24843781283846345, -0.6663460824900026], [6.3706065987, -5.30581855435, 0.23194345387930004, -0.91392610300670363], [6.47838802736, -5.51119851792, 0.26767268404651573, -1.7668025565347625], [6.38169483395, -5.76079637876, 0.22982649873860456, -1.2190927307834423]]]
		

		self.walls = WallSections(self._world, walls)
		#self.walls.createWall(wall7)

		" make accessible to our mapping algorithms for comparison purposes "
		self.probe.setWalls(self.walls)


		self.collisionHandler = SnakeListener(self._world, self._plane, self.probe) 

		# add coordinate system markers 

		xPnt = ogre.Vector3(5.0,0.0,0.0)
		zPnt = ogre.Vector3(0.0,0.0,5.0)

		self.xEntity = self.probe._mgr.createEntity("X_ent"+str(i), "Cube.mesh")
		self.xEntity.setCastShadows(False)
		self.xEntity.setMaterialName("Red")
		self.zEntity = self.probe._mgr.createEntity("Z_ent"+str(i), "Cube.mesh")
		self.zEntity.setCastShadows(False)
		self.zEntity.setMaterialName("Green")

		size = ogre.Vector3(0.1,0.1,0.1)
		self.probe.statNode.addEntity(self.xEntity, xPnt, scale = size)
		self.probe.statNode.addEntity(self.zEntity, zPnt, scale = size)

		self.probe.statNode.build()

	def frameStarted (self, evt, Keyboard, Mouse):
		## Set the shadow distance according to how far we are from the plane that receives them
		self.sceneManager.setShadowFarDistance((abs(self.camera.getPosition().y) + 1.0) * 3.0)

	def frameEnded(self, evt, Keyboard, Mouse):
		time = evt.timeSinceLastFrame
		sceneManager = self.sceneManager

		## Step the world and then synchronise the scene nodes with it, 
		## we could get this to do this automatically, but we 
		## can't be sure of what order the framelisteners will fire in
		if (self._stepper.step(WORLD_STEP)):
			self._world.synchronise()

	## we need to register the framelistener
	def _createFrameListener(self):
		## note we pass ourselves as the demo to the framelistener
		self.frameListener = SimpleScenesFrameListener(self, self.renderWindow, self.camera, self.probe)
		self.root.addFrameListener(self.frameListener)


# set output to "test_%04d/output.txt" % i


if __name__ == '__main__':

	try:
		#prof = Profile()

		application = SnakeApp()
		cProfile.run('application.go()', 'fooprof')

		#prof.runcall(application.go)
		#prof.dump_stats("profile_info2") 
	except ogre.OgreException, e:
		traceback.print_exc()
		print e

