{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
##Analysis\
\
\
Our theoretical contribution is a quantitative analysis of the trade-space between environmental characteristics, snake robot morphology, and locomotion control parameters.  That is, given a snake robot morphology and control parameters, what types of environments can we successfully explore.  Conversely, given a specific environment, what robot morphology and control parameters are required to successfully explore it.\
\
First we will perform an analysis of the trade-space for forming a 3-point stable anchor in a smooth pipe.  A 3-point anchor is shown in [](#param_1) and is the minimum number of contact points required to form a stable anchor.  This posture will hold the body of the snake rigid and prevent it from translating or rotating within a threshold of external force and torque.\
\
We will define and quantify the parameters that describe this system: the environment, the robot, and the control.\
\
Our particular environment of a smooth pipe can easily be described with one parameter, the pipe width \\\\(W\\\\).\
\
The complete snake robot morphology can be described by 3 parameters: segment width \\\\(w\\\\), segment length \\\\(l\\\\), and number of segments \\\\(n\\\\).\
\
Finally, control of the robot is achieved by fitting the body of the snake onto a curve described by a sinusoid.  The parameters for control are the values of amplitude \\\\(A\\\\) and period \\\\(P\\\\), where \\\\(y = A \\cos(\\frac\{2 \\pi x\}\{P\})\\\\).  \
\
![Parameterization of 3-point stable anchor in a smooth pipe.][param_1]\
\
[param_1]: CurveDiagram.png width=400px\
\
<!--\
%\\begin\{figure\}[htb]\
%\\begin\{center\}\
%\\includegraphics[scale=0.5]\{CurveDiagram\}\
%\\end\{center\}\
%\\caption\{Parameterization of 3-point stable anchor in a smooth pipe.\}\
%\\label\{param_1\}\
%\\end\{figure\}\
-->\
\
###Case: Snake as a Curve\
\
We first consider the degenerate case where \\\\(l = 0\\\\), \\\\(w = 0\\\\), and \\\\(n = \\infty \\\\).  This results in a snake that has no width and an infinite number of joints.  Essentially, the snake body equals the curve equation.  Since \\\\(w = 0\\\\), this results in \\\\( 2A = W \\\\).  This is shown [](#deg_1).\
\
\
![3-point stable anchor with \\\\(w = 0\\\\), \\\\(l = 0\\\\), and \\\\(n = \\infty.\\\\).][deg_1]\
\
[deg_1]: {\field{\*\fldinst{HYPERLINK "scrivlnk://185"}}{\fldrslt DegenerateCurve.png}} width=400px\
\
We define \\\\(L\\\\) to be the total length of the snake which can be computed from the equation of the curve.\
\
<!--\
\\begin\{equation\}\
f(x) =  \\frac\{W\}\{2\} \\cos \\left( \\frac\{2 \\pi x\}\{P\} \\right) \
\\end\{equation\}\
-->\
\
Equation 1 is the equation of the curve with \\\\(P\\\\) the period, \\\\(W\\\\) the width of the pipe.   We can plug \\\\(f(x)\\\\) into the equation for computing arc length shown in Equation 2 and 3:\
\
<!--\
\\begin\{equation\}\
L = \\int_\{0\}^\{P\} \\sqrt\{f'(x)^2 + 1\} \\,\\,\\, dx\
\\end\{equation\}\
-->\
\
<!--\
\\begin\{equation\}\
L = \\int_\{0\}^\{P\} \\sqrt\{\\left( \\frac\{-W \\pi\}\{P\} \\sin \\left( \\frac\{2 \\pi x\}\{P\} \\right)  \\right)^2 + 1\} \\,\\,\\, dx\
\\end\{equation\}\
-->\
\
This integration can not be solved analytical and must be solved by plugging in values for \\\\(P\\\\) and \\\\(W\\\\) and computing \\\\(L\\\\) numerically.  In our control methodolgy, \\\\(P\\\\) is usually held fixed and the width of the environment is always changing, so \\\\(W\\\\) is always varying.  Here we show a plot holding \\\\(P\\\\) fixed for various values while changing the value of \\\\(W\\\\) in [](#plot_1).\
\
![Plot of snake arc length \\\\(L\\\\) for various values of \\\\(W\\\\) and \\\\(P\\\\).][plot_1]\
\
[plot_1]: {\field{\*\fldinst{HYPERLINK "scrivlnk://186"}}{\fldrslt 2011_01_23_Plot_DegenerateAnchor.png}} width=400px\
\
This plot shows that when pipe width \\\\(W \\to \\infty\\\\), the length \\\\(L\\\\) converges to a constant slope of \\\\(\\frac\{dL\}\{dW\} = 2\\\\) and \\\\(L = 2W \\,, \\forall P\\\\) as \\\\(W \\to \\infty\\\\).  This can be seen by approximating the 3-point anchor and cosine curve as a triangle with a base of \\\\(P\\\\) and a height of \\\\(W\\\\), and the vertices on the anchor points.  Increasing \\\\(W\\\\) will achieve the above results.\
\
The difference in \\\\(L\\\\) becomes large for different values of \\\\(P\\\\) when \\\\(W\\\\) is small.  Once \\\\(W\\\\) becomes sufficiently large, \\\\(W\\\\) dominates and the period becomes less of a factor.   Given that our application involves tight quarters, we are likely to find typical values of \\\\(W\\\\) to be small and \\\\(P\\\\) will vary depending on the context.\
\
###Case: Snake with Width\
\
We now consider the case where \\\\(l = 0\\\\), \\\\(n = \\infty\\\\), but \\\\(w > 0\\\\).   This in effect creates a continuous snake robot with infinite joints but has a thickness to it.  To determine the total length of the snake given a pipe width \\\\(W\\\\), a control period \\\\(P\\\\), and a segment width of \\\\(w\\\\), we first determine the equation of the curve:\
\
<!--\
\\begin\{equation\}\
f(x) =  \\frac\{W-w\}\{2\} \\cos \\left( \\frac\{2 \\pi x\}\{P\} \\right) \
\\end\{equation\}\
-->\
\
Since the snake centers its body on the curve, it has space of \\\\(\\frac\{w\}\{2\}\\\\) on either side of it.  We start the cosine amplitude at \\\\(\\frac\{W\}\{2\}\\\\) and substract \\\\(\\frac\{w\}\{2\}\\\\) as the width of the snake increases.  This results in equation 4.\
\
If we plug the \\\\(f(x)\\\\) into the arc length equation, we get the snake length for given \\\\(W\\\\), \\\\(P\\\\), and \\\\(w\\\\):\
\
<!--\
\\begin\{equation\}\
L = \\int_\{0\}^\{P\} \\sqrt\{\\left( \\frac\{-(W-w) \\pi\}\{P\} \\sin \\left( \\frac\{2 \\pi x\}\{P\} \\right)  \\right)^2 + 1\} \\,\\,\\, dx\
\\end\{equation\}\
-->\
\
Holding \\\\(P = 1\\\\), and increasing the pipe width \\\\(W\\\\) for different values of \\\\(w\\\\), we get the following plot shown in [](#plot_2).  This plot captures the intuition that a snake robot is not able to explore a pipe that is thinner than the robot's body width.  However, once you enter a pipe where \\\\(W > w\\\\), the plot takes on the same curve as [](#plot_1).  For large enough \\\\(W\\\\),  \\\\(L = 2(W-w)\\\\) and \\\\(\\frac\{dL\}\{dW\} = 2\\\\).\
\
![Plot of snake length \\\\(L\\\\) while \\\\(P=1\\\\), for various values of \\\\(W\\\\) and \\\\(w\\\\).][plot_2]\
\
[plot_2]: {\field{\*\fldinst{HYPERLINK "scrivlnk://187"}}{\fldrslt 2011_01_24_Plot_WidthAnchor.png}} width=400px\
\
### Case: Snake with Segments\
\
We now consider the case where the robot composed of discrete segments of a given length \\\\(l\\\\).  Up until now, we have represented the snake as a curve function.  However, with segments, the robot needs to fit its body to be placed on the curve.   Our current approach assumes a monotonic curve in the x-direction and the joint axes are placed directly on the curve.  In this example, we assume that curve fitting is perfect and unique.\
\
Again we look at the 3-point anchor situation determine how the length of the snake changes with different parameters.  Instead of length though, we are computing the number of required snake segments.\
\
There are two approaches.  The first is to examine the situation analytically, deriving an equation for the number of segments given period \\\\(P\\\\), pipe width \\\\(W\\\\), and segment length \\\\(l\\\\).  The second is to run an algorithm that performs the curve fitting given a curve and lets us determine the required number of segments.  We do both.\
\
Analytically, we can easily compute an upper bound for the number of segments.  If we have already calculated \\\\(L\\\\), we can determine that we will need at most \\\\(n\\\\) segments shown in equation 6.\
\
<!--\
\\begin\{equation\}\
n = \\left \\lceil \\frac\{L\}\{l\} \\right \\rceil\
\\end\{equation\}\
-->\
\
At most \\\\(n\\\\) segments will be required in the worst case where the segments lay directly on the curve.  However, in most cases, the segments will be cutting corners to put both ends on top of the curve.  This will result in the required number of segments being less than the worst case.\
\
Algorithmically, we can determine the actual number of segments required for a given configuration.  Given a monotonic curve \\\\(\\gamma\\\\), draw a circle \\\\(c\\\\) at the start of the curve with radius \\\\(l\\\\) and origin \\\\(o\\\\).  Take all the intersection points between \\\\(c\\\\) and \\\\(\\gamma\\\\). Take only the intersection points where \\\\(p_x > o_x\\\\).  Select \\\\(p\\\\) with the smallest \\\\(x\\\\) value.  Place a segment going from \\\\(o\\\\) to \\\\(p\\\\).  Set \\\\(o = p\\\\) and repeat until there is no more curve.  This looks like the following in [](#plot_3).\
\
![Intersecting circles along the line of the curve.  Demonstration of curve fitting algorithm.][plot_3]\
\
[plot_3]: {\field{\*\fldinst{HYPERLINK "scrivlnk://188"}}{\fldrslt 2011_01_28_FitAlgorithm_Segs.png}} width=400px}