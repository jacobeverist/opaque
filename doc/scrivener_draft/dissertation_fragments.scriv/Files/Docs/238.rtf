{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 \
###Slip Mitigation\
\
In the case that error is introduced into our local free space map, we are interested in mitigating its negative effects.   We have developed two approaches for handling error when it occurs during sensing.\
\
Since we start our mapping process by determining the global pose of the local origin \\\\(P_\{19\}\\\\), error occurs when \\\\(P_\{19\}\\\\) is no longer in its proper place.  Either it moves by translation or more commonly and critically, it experiences rotational error.  \
\
####Reference Stabilization [sec:ref_stable]\
\
![Local map rotational error.][ref_rot_error]\
\
[ref_rot_error]: {\field{\*\fldinst{HYPERLINK "scrivlnk://164"}}{\fldrslt localMapError.png}} width=400px\
\
A sudden rotation of \\\\(P_\{19\}\\\\) may occur, caused by any of the reasons detailed in Section [](#sec:anchors).  The consequences of rotational error is that the entire body of the snake will rotate around the origin within the local map.  This will result in a map feature shown in [](#ref_rot_error).\
\
We proactively combat this possibility by running a reference stabilization algorithm that continually corrects the local origin \\\\(O_t\\\\) for \\\\(P_\{19\}\\\\) in the local map at time \\\\(t\\\\).  For \\\\(t=0\\\\), the origin is \\\\((0,0,0)\\\\) for inputing into the equations [](#equ:rect1) and [](#equ:rect2).  However, for each time step, we wish to calculate an \\\\(O_t\\\\) that is the most "stable" in case \\\\(P_\{19\}\\\\) becomes destabilized.\
\
To do this, we remark that during the probing phase, the back anchored section of the snake as a whole will remainly roughly in the same tight space even if its joints and ssegments should wobble and slip.  Short a large amount of translational slipping down the pipe, taken as a whole, the body should remain in the same place.  Therefore, in the local free space map, the back anchored portion should of the snapshot time \\\\(t\\\\) should also remain in the same neighborhood of the back anchor snapshot at time \\\\(t-1\\\\).  \
\
![Gross Posture Approximation Curve of sample posture.][ref_gpac]\
\
[ref_gpac]: {\field{\*\fldinst{HYPERLINK "scrivlnk://192"}}{\fldrslt plotGPAC0059.png}} width=400px\
\
We enforce this observation by fitting B-spline curve \\\\(\\beta_t\\\\) and \\\\(\\beta_\{t+1\}\\\\) along the points that make up the reference poses of the back anchor segments for both the current and previous snapshots.  The B-spline curves are calibrated to smooth out the sinusoidal anchoring posture of the snake body and instead reflect the gross posture of the body in the confined environment as shown in [](#ref_gpac).   We then find a \\\\((\\delta x, \\delta y, \\delta \\theta)\\\\) for \\\\(\\beta_\{t+1\}\\\\) such that the two curves are aligned and then we update \\\\(O_\{t+1\}\\\\) to reflect this.\
\
This approach prevents sudden rotational errors from occurring and corrects the snake's estimated pose in the local map while we are capturing sensor data by generating a new \\\\(O_\{t+1\}\\\\) that is consistent with past data.  So even if the snake's body is wobbling or slipping, we will likely produce consistent sensor data.\
 \
Should the data be too hopelessly corrupted from a bow tie effect in the posture image, we can reject the overall data and take the instantaneous shot of the current posture as the only data.  This gives a sparse snapshot of the environment and leaves the exploratory data out, but if will capture the gross shape of the local environments.\
\
<!--\
%Our goal is to detect when this first occurs and compensate to keep the map consistent.  We accomplish this by determining if the new posture snapshot suddenly jumps out of the local free space area we have already mapped.  The time between snapshots is very short and the snake probe is moving slowly enough that this is a reasonable assumption.\
\
%We accomplish this by doing the following.   At every timestep \\\\(t\\\\), we have previously computed the alpha hull \\\\(H_\{t-1\}\\\\) for the current free space map.   For the current posture \\\\(\\bar\{\\phi_t\}\\\\), and for its position in the free space map using equations [](#equ:rect1) and [](#equ:rect2) and starting from the origin \\\\(O_\{t-1\}\\\\), determine if its position breaches the boundary of \\\\(H_\{t-1\}\\\\) by distance \\\\(d_h\\\\).\
\
%--- we suppose that a significant rotational error has occurred.  In this case, we alter the location of the root pose from origin to an offset that keeps the posture inside the polygon boundary.  \
%--- Correction is achieved by creating a spline of the back segments of the original and the current back posture.  The back splines are re-aligned and the pose of the root node is recomputed using this is a constraint.\
-->\
}