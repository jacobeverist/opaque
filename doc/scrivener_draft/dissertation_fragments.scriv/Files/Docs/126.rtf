{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 ###Generating Skeletons\
\
To build the skeleton has the same computation as in [](#gen_axis).  However, in this case, we do not find the longest path.  We instead keep the whole tree.\
\
\
<!--\
\\begin\{algorithm\}\
\\caption\{Generate Skeleton from Posture Images\}       \
\\label\{alg:skeleton\}\
\\begin\{algorithmic\}\
\\State \
\\State $ I_\{0:t\} \\Leftarrow $ posture images\
\\State $ H_\{0:t\} \\Leftarrow $ alpha shapes from posture images\
\\State $ M_\{0:t\} \\Leftarrow $ uniformly distributed points inside alpha shape polygons\
\\State\
\\State Compute alpha shape of union of points\
\\State $\\hat\{H\} \\Leftarrow \\mathrm\{alphaShape\}(M_\{0:t\}) $\
\\State\
\\State Fill points into alpha shape and make image\
\\State $\\hat\{I\} \\Leftarrow \\mathrm\{polygonToImage\}(\\hat\{H\}) $\
\\State\
\\State Skeletonize the image\
\\State $\\hat\{T\} \\Leftarrow \\mathrm\{skeletonize\}(\\hat\{I\}) $\
\\State\
\\State Compute set of leaf-to-leaf paths\
\\State $\\hat\{C\}_\{1:j\} \\Leftarrow \\mathrm\{computeSplices\}(\\hat\{T\}) $\
\\State \
\\State \\Return $\\hat\{T\}, \\hat\{C\}_\{1:j\}$\
\\end\{algorithmic\}\
\\end\{algorithm\}\
-->\
\
Shown in algorithm [](#alg:skeleton), we compute the union of the posture images by first finding the union of their alpha shape polygons, filling in the polygons with uniformly distributed points, and then finding the alpha shape of the union of points.    From this we find the skeletonization of the alpha shape polygon converted to image format.  We find all the possible paths between leafs and return them as a set of \\\\( j \\\\) "splices".\
\
}