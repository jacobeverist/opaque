{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 ##Axis Method\
\
In the previous section, we discussed the basics of creating a map using constraints between the current and most recent pose.  We assumed that our robot was traveling forward through a pipe-like environment while building a map of its traversal. \
\
Each geometric constraint between poses was either an in-place constraint between a pair of poses at the same anchored location, or a step constraint between two consecutive forward sweep poses.  In the latter case, the step constraints encode the movement of the robot through the environment.   In the former case, the in-place constraint encodes the poses being at the same location.\
\
However, if our robot should decide to reverse direction and backtrack through the previously explored environment, using only the constraints we have previously described, the backward path will begin to drift from the forward path as shown in Figure X.  We need some approach to constrain the old poses from the forward traversal to the new poses of the backward traversal.\
\
This problem is called both the data association problem and the loop-closing problem.  For the data association problem, we wish to be able to identify we are observing something we have seen before.  In the loop-closing problem, we want to ensure that the old poses and the new poses of the same location are accurately and consistently integrated into the map.  This would fix the problem shown in Figure X and hopefully produce Figure Y.\
\
A standard approach to this problem is to solve the feature correspondence problem by matching feature landmarks between different poses and then adding constraints between the features.  Though we have the sparse spatial landmarks, in our approach, they are insufficient to solve this task consistently.  We must find a solution that works with just the posture images of each pose.\
\
The simplest manifestation of this problem is the case where a robot travels down a single pipe and then backtracks in the other direction.  Our interest is for the new poses created while traveling backward to be correctly constrained with the old poses created by originally traveling forward.\
\
Instead of creating geometric constraints between individual poses, another approach we can take is to make a constraint between a new posture image and all of the other posture images in aggregate.  In this way, we can avoid the difficulty of making individual pairwise constraints between poses.\
\
The approach we take is to find the union of all past posture images together and compute the alpha shape from that.  From the alpha shape we then compute the medial axis.  The result is a much larger version of the spatial curve representation of individual posture images.\
\
To constrain the pose of the new posture image, simply perform ICP between the pose's spatial curve and the past whole map medial axis.  The result can be seen in the Figure X.    Like the naive method, we have the invariant condition that the new pose's spatial curve partially overlaps the global medial axis.  Therefore, there exists a section of the global medial axis curve that the new pose at least partially overlaps.  For poses that are backtracking through previously visited territory, the new pose will be completely overlapped by the global medial axis.\
\
This mapping method looks for the best possible result for the current pose.  All past poses are fixed and unable to be changed.  Should we ever make a significant mistake in the placement of the current pose, this will be permanently reflected in the map for the future.\
\
Even using this simplistic approach, a significant translational error along the axis of travel in a straight section of the environment does not have severe consequences to the map.  Along a straight section of the pipe, the current pose can be placed anywhere along that section with little consequence to the structural and topological properties of the map.   The only thing that is affected is the current best estimate of the robot's pose.\
\
The mapping system is able to localize the pose much better with respect to curved shape features in the environment.  If there are sharp junctions or curved sections, the current pose can be localized with much better accuracy.\
\
Once the current pose's posture image is given it's most likely location, it is added to the existing map.  The union of posture images is calculated, the alpha shape is computed, and the global medial axis is computed.  If the robot is pushing the frontier of the map, this will result in an extension of the global medial axis.   If the posture image's pose is an incorrect position, the resultant global medial axis can be corrupted and result in kinks (distortions, discrepancies).  These kinks can compound future errors and result in even further distorted maps.\\\
}