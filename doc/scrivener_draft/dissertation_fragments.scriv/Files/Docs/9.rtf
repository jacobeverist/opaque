{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
\deftab720
\pard\pardeftab720\fi720\ql\qnatural

\f0\fs24 \cf0 \
The purpose of the divergence computation is to detect the concrete event of the target curve diverging from the host curve.  This is used to classify whether or not a junction has been detected or whether the host path is simply being extended.\
\
The difficulty associated with this task is that there is no discrete event to determine a divergence.  It is measured by passing a threshold that must be calibrated to the task.  The thresholds are both sensitive to cartesian distance and angular difference between the diverging curve and the divergence point on the host curve.\
\
We first begin by computing the closest point distance between the target curve points and the host curve.  At the point which the closest point distances begin monotonically increasing until the curve runs out, we start our search for the branch point.  That is, we select the minimum distance inflection point before distance increases monotonically.\
\
From this point, we walk.\
\
\
\
\
Divergence between two curves is the point at which the overlapping curves separate.  It is not a complete overlap but a partial overlap of two noisy curves.  The challenge is defining under what conditions two curves are considered to be overlapping and under what conditions the curves are diverging.  Finally, one must decide the location where the two curves transition from overlapping to diverging.  \
\
We may require the divergence point to have particular properties.  That is, we may want the point to reflect an extrapolation of where the two curves would meet if they were not smoothed so much.  We may also want to divergence point to have an angle that represents the approximate angle of divergence.  \
\
The divergence can be slow transition, but we would like to specify a fixed point at which it occurs.  Satisfying the above conditions at the same time, determining the divergence point becomes a challenge.\
\
We have defined 2 different types of divergence.  The simple divergence and the angle-biased divergence.\
\
The simple divergence is computed based on the closest point distance between the host curve and the target curve.\
\
\
getDeparturePoint():\
\
- receive as input the global path and the local spline of a pose\
}