{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 ## Naive Method\
\
Our first approach is what we will call the *naive method*.  In this approach, we apply constraints between the current pose and the previous pose.  Specifically, given the previous forward and backward sweep poses of \\\\(X_\{k-3\}\\\\) and \\\\(X_\{k-2\}\\\\), we apply geometric constraints to the two new poses, \\\\(X_\{k-1\}\\\\) and \\\\(X_\{k\}\\\\).  This gives us a best guess estimate of \\\\(X_\{k-1\}\\\\) and \\\\(X_k\\\\) from the last estimated poses.\
\
The geometric constraint between a pair of poses is achieved by performing an Iterative Closest Point (ICP) fit between each poses' spatial curve.  This takes advantage of the fact that consecutive poses of the snake should be partially overlapping as an invariant condition.  Therefore, consecutive poses' spatial curves should also be partially overlapping.  If we perform ICP on the partially overlapping curves, this should give us a good estimate of the robot's new pose.\
\
The only question that remains is, how much should the curves partially overlap?  The amount of overlap can be determined by making estimates on the motion traveled during a locomotion step.  If there are any significant curve features that are shared by the two poses, the ICP algorithm should find those and correctly align the two spatial curves together.\
\
There are two constraints we make.  The *in-place constraint* between two poses is made when no locomotion occurs, and the *step constraint* between two poses separated by a locomotion step.  The step constraint is made between two poses that are sweeping in the same direction.  Specifically, only the forward sweep poses are constrained using the step constraint, \\\\(X_\{k-2\}\\\\) to \\\\(X_k\\\\).\
\
Given the experience, \\\\( E = \\\{ I_0, A_0, I_1, A_1, I_2, A_2, I_3 \\\} \\\\), where \\\\( A_\{0:2\} = \\\{\expnd0\expndtw0\kerning0
\\varnothing, f, \\varnothing\\\kerning1\expnd0\expndtw0 \} \\\\), \\\\(X_0 = (0,0,0)\\\\), find the values of \\\\( \\\{X_1, X_2, X_3\\\} \\\\).   Using the constraint function, we can compute the new poses with the series of calls:\
\
<!--\
\\begin\{equation\}\
X_1 = \\mathrm\{overlap\}(X_0, I_0, I_1, A_0)\
\\end\{equation\}\
\\begin\{equation\}\
X_2 = \\mathrm\{overlap\}(X_0, I_0, I_2, A_1)\
\\end\{equation\}\
\\begin\{equation\}\
X_3 = \\mathrm\{overlap\}(X_2, I_2, I_3, A_2)\
\\end\{equation\}\
-->\
\
\
We describe each of these two types of constraints and show how a map is formed.\
\
\
}