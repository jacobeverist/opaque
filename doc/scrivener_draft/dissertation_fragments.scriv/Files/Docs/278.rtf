{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\deftab720
\pard\pardeftab720\li810\fi-810\sl288\slmult1

\f0\fs28 \cf0 \
### Motion Estimation\
\
Given the initial distribution of poses shown in [](#init_pose_distribution), we want to first model the movement of the robot given the current action A_t.  For every candidate pose shown in [](#init_pose_distribution), motion is achieved by displacing the pose by a fixed distance along the curve of each of the splices the pose is contained on.  The fixed distance displaced is an empirically determined value from the average locomotion distance of the robot.  For our current configuration, we use the value \\\\(0.8\\\\).\
\
If a candidate pose is on 3 different splices, we will have 3 different displacement locations for the given candidate.  This multiplies the total number of possible locations.  Given all of these candidates, we then need to evaluate them based on some fitness function.  We tailor our fitness function for consistency between the current poses and the previous poses, as well as a Gaussian forcing function that biases selection for a pose that is displaced from the previous pose.  \
\
The evaluation function we use includes a number of metrics that we will need to define individually.  They are as follows:\
\
<!-- \
\\begin\{enumerate\}\
\\item Landmark Cost\
\\item Angular Difference\
\\item Overlap\
\\item Contiguity Fraction\
\\end\{enumerate\}\
-->\
\
#### Landmark Cost\
\
This metric finally uses the spatial features derived in [](#chap:landmarks).   Our goal is to compute the sum of the distances of every feature to every other feature.  Therefore, a low sum would indicate the features are all very close to each other and would likely mean that all of the poses that have evidence of junction are close together and building the junction properly.\
\
However, each spatial feature has a different reliability in its location indicating a junction.   For instance, the bloom and arch features have similar quality and indicate the swelling inside of a junction.  The bend feature is more difficult because the point of maximum angular derivative does not necessarily indicate being within the junction, just very close to it.  So the bend feature is more prone to error and any cost sum should reflect this lower reliability.\
\
We assign the covariance for the bloom and arch features, \\\\(C_a\\\\), and the bend features, \\\\(C_b\\\\), are defined respectively:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 <!--\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\\begin\{equation\}\
\pard\pardeftab720\sl288\slmult1
\cf0 \expnd0\expndtw0\kerning0
    C_a = \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \kerning1\expnd0\expndtw0 \\begin\{bmatrix\}\
s_a^2 & 0 \\\\\
0 & s_a^2\
\\end\{bmatrix\}\
\\quad\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
C_b = \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \kerning1\expnd0\expndtw0 \\begin\{bmatrix\}\
s_b^2 & 0 \\\\\
0 & s_b^2\
\\end\{bmatrix\}\
\\quad \\mathrm\{where\} \\quad s_a = 0.3 \\quad s_b = 0.9\expnd0\expndtw0\kerning0
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \\end\{equation\}\
\pard\pardeftab720\sl288\slmult1
\cf0 \expnd0\expndtw0\kerning0
    \kerning1\expnd0\expndtw0 -->\
\
The distance between an arch feature \\\\(\\bar\{p\}_a\\\\) and a bend feature \\\\(\\bar\{p\}_b\\\\) can be found by the following equation:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 <!--\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\\begin\{equation\}\
\pard\pardeftab720\sl288\slmult1
\cf0 \expnd0\expndtw0\kerning0
    \\Call\{landmarkDist\}\{\\bar\{p\}_a, \\bar\{p\}_b, s_a, s_b\} = \\sqrt\{\\frac\{|\\bar\{p\}_a - \\bar\{p\}_b|\}\{s_a^2 + s_b^2\}\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\\end\{equation\}\
\pard\pardeftab720\sl288\slmult1
\cf0 \expnd0\expndtw0\kerning0
    \kerning1\expnd0\expndtw0 -->\
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 \
To compute the sum of all the distances from every landmark to every other landmark, there are \\\\(N*(N-1)\\\\) calculation if there are \\\\(N\\\\) landmarks:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 <!--\
\\begin\{algorithm\}\
\\caption\{Compute Landmark Cost\}       \
\\label\{alg:landmarkCost\}\
\\begin\{algorithmic\}\
\\State $\\Function\{computeLandmarkCost\}\{p_\{0:N\}, s_\{0:N\}\}$\
\\State $sum \\Leftarrow 0$\
\\State $MAXDIST \\Leftarrow 7.0$\
\\For\{$i = 0$ to $N$ \}\
	\\For\{$j = i+1$ to $N$ \}\
\pard\pardeftab720\sl288\slmult1
\cf0 \expnd0\expndtw0\kerning0
		\\State  $d \\Leftarrow |\\bar\{p\}_a - \\bar\{p\}_b|$\
		\\If \{$d < MAXDIST$\}\kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 			\\State $sum \\Leftarrow sum + \\Call\{landmarkDist\}\{p_i, p_j, s_i, s_j\}$\
		\\EndIf\
	\\EndFor\
\\EndFor\
\\State \\Return $sum$\
\\EndFunction\
\\end\{algorithmic\}\
\\end\{algorithm\}\
-->\
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 \
Here, \\\\(MAXDIST\\\\) is a maximum cartesian distance for including the distance between two points as part of our final cost.  This is designed such that two junctions that are spaced apart do not erroneously try to align the spatial features of both and merge the two junctions into one.  This restricts the types of environments we can map such that the junctions should be sufficiently spaced apart.  However, it allows us to map multi-junction environments.\
\
#### Angular Difference\
\
Angular difference is a very intuitive metric.  For the previous poses, \\\\(X_\{k-3\}\\\\) and \\\\(X_\{k-2\}\\\\), and the current poses, \\\\(X_\{k-1\}\\\\) and \\\\(X_k\\\\), what is the difference in orientation of the poses and their spatial curves \\\\(C_\{k-3:k\}\\\\).    Essentially, we want the consecutive poses to be similarly oriented because they should be overlapping.  \
\
For each pose and its spatial curve, we consider three different angles.  The first is the angle from the pose \\\\(\\theta_k\\\\).  Then we consider the tangent angle of the tips of the spatial curve, \\\\(\\phi_k\\\\) and \\\\(\\beta_k\\\\) for the forward tip and backward tip angles respectively.\
\
To compute the angular difference, we compare forward sweep poses together and backward sweep poses together.  Therefore, we compare \\\\(X_\{k-3\}\\\\) to \\\\(X_\{k-1\}\\\\) and \\\\(X_\{k-2\}\\\\) to \\\\(X_\{k\}\\\\).  We define the angular difference in algorithm [](#alg:angdiff).\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 <!--\
\\begin\{algorithm\}\
\\caption\{Compute Angular Difference\}       \
\\label\{alg:angdiff\}\
\\begin\{algorithmic\}\
\\State $\\Function\{computeAngDiff\}\{\\phi_i, \\phi_j, \\theta_i, \\theta_j, \\beta_i, \\beta_j\}$\
\\State\
\\State $\\phi_d \\Leftarrow | \\arctan(\\sin(\\phi_i-\\phi_j)) |$\
\\State $\\theta_d \\Leftarrow | \\arctan(\\sin(\\theta_i-\\theta_j)) |$\
\\State $\\beta_d \\Leftarrow | \\arctan(\\sin(\\beta_i-\\beta_j)) |$\
\\State\
\\State $sum = \\phi_d + \\theta_d + \\beta_d - \\Call\{max\}\{\\phi_d,\\theta_d,\\beta_d\}$\
\\State\
\\State \\Return $sum$\
\\EndFunction\
\\end\{algorithmic\}\
\\end\{algorithm\}\
-->\
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 \
We compute the sum of the two minimum difference angle.  We do this because usually at least one of the differences is very large due to the robot traveling through a junction or turn of some kind.  By filtering out the maximum difference angle, we get an angular consistency measure of two consecutive poses.\
\
For the current poses \\\\(X_k\\\\) and \\\\(X_\{k-1\}\\\\), we can compute the angular difference metric with the following calculations:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 <!--\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\\begin\{equation\}\
\\mathrm\{angDiff\}_k = \\Call\{computeAngDiff\}\{\kerning1\expnd0\expndtw0 \\phi_k, \\phi_\{k-2\}, \\theta_k, \\theta_\{k-2\}, \\beta_k, \\beta_\{k-2\}\expnd0\expndtw0\kerning0
\}\
\\end\{equation\}\
\\begin\{equation\}\
\\mathrm\{angDiff\}_\{k-1\} = \\Call\{computeAngDiff\}\{\kerning1\expnd0\expndtw0 \\phi_\{k-1\}, \\phi_\{k-3\}, \\theta_\{k-1\}, \\theta_\{k-3\}, \\beta_\{k-1\}, \\beta_\{k-3\}\expnd0\expndtw0\kerning0
\}\
\\end\{equation\}\
\pard\pardeftab720\sl288\slmult1
\cf0 \expnd0\expndtw0\kerning0
    \kerning1\expnd0\expndtw0 -->\
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 \
\
#### Overlap\
\
The overlap is a measure of how closely a pose's spatial curve overlaps the assigned skeleton splice. If off by a fixed offset, the overlap sum would be really high.  If it closely follows the splice curve, then the overlap sum would be near zero.  It uses a similar cost function as an ICP evaluation function, but instead it just uses the some of cartesian distances and only uses the maximum contiguously overlapping section.\
\
In order to compute this measure, we need to find the maximum contiguous section of the spatial curve.  If there are \\\\(N\\\\) uniformly spaced points composing the spatial curve, we are looking for the maximum contiguous sequence of points that all have closest distance to the splice curve less than some distance threshold \\\\(D_c\\\\).  Once we find that section, then we sum the closest distance of each of those points and divide by the number of contiguous points.  This gives us our overlap sum \\\\(sum_\{k\}\\\\) as seen in algorithm [](#alg:maxcontig).\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 <!--\
\\begin\{algorithm\}\
\\caption\{Compute Maximum Overlap Contiguity Section and Sum\}       \
\\label\{alg:maxcontig\}\
\\begin\{algorithmic\}\
\\State $\\Function\{computeMaxContig\}\{C_\{splice\}, C_k\}$\
\\State\
\\State $D_c \\Leftarrow 0.2$\
\\State $N \\Leftarrow | C_k | $\
\\State $m \\Leftarrow 0$\
\\State $sum \\Leftarrow 0$\
\\State $m_\{max\} \\Leftarrow 0$\
\\State $sum_\{max\} \\Leftarrow 0$\
\\State\
\\For\{$i = 0$ to $N$ \}\
	\\State $p \\Leftarrow C_k(i)$\
	\\State $D_\{min\} = \\Call\{closestDistance\}\{p, C_\{splice\}\}$\
\pard\pardeftab720\sl288\slmult1
\cf0 \expnd0\expndtw0\kerning0
	\\If \{$D_\{min\} < D_c$\}\kerning1\expnd0\expndtw0 \
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 		\\State $m \\Leftarrow m +  1$\
		\\State $sum \\Leftarrow sum + D_\{min\}$\
		\\State \
		\\If \{$m > m_\{max\}$\}\
			\\State $m_\{max\} \\Leftarrow m$\
			\\State $sum_\{max\} \\Leftarrow sum$\
		\\EndIf\
	\\Else\
		\\State $m \\Leftarrow 0$\
		\\State $sum \\Leftarrow 0$\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 	\\EndIf\
\\EndFor\
\\State\
\\State $sum_\{k\} \\Leftarrow \\frac\{sum_\{max\}\}\{m_\{max\}\}$\
\\State\
\\State \\Return $sum_\{k\}, m_\{max\}$\
\\EndFunction\
\\end\{algorithmic\}\
\\end\{algorithm\}\
-->\
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 \
#### Contiguity Fraction\
\
This metric gives us the fraction of the spatial curve that is part of the maximum contiguous section.  Taking the value algorithm \\\\(m_\{max\}\\\\) from algorithm [](#alg:maxcontig), for a pose \\\\(X_k\\\\) and its spatial curve \\\\(C_k\\\\), and \\\\(|C_k|\\\\) is the number of points on the spatial curve, we can compute the contiguity fraction from the following equation:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 <!--\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\\begin\{equation\}\
\\mathrm\{contigFrac\}_k = \\frac\{m_\{max\}\}\{|\kerning1\expnd0\expndtw0  C_k |\}\expnd0\expndtw0\kerning0
\
\\end\{equation\}\
-->\
\
This metric is not used for motion estimation, but will be used in later localization.\
\
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 \kerning1\expnd0\expndtw0 #### Evaluation\
\
Given a whole series of candidate poses pairs \\\\(X_\{k-1\}\\\\) and \\\\(X_k\\\\), with an associated skeleton splice \\\\(C_\{splice\}\\\\), we compute the fitness evaluation with the following equation:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \
<!--\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\\begin\{equation\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \kerning1\expnd0\expndtw0 F(k-1,k) = -2*sum_\{k-1\} - 2*sum_\{k\} - \\frac\{\\mathrm\{angDiff\}_\{k-1\}\}\{\\pi\} - \\frac\{\\mathrm\{angDiff\}_\{k\}\}\{\\pi\} + 2*\\frac\{LM_\{max\}-LM\}\{LM_\{max\}\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\\end\{equation\}\
-->\
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 \
\
\kerning1\expnd0\expndtw0 This evaluation function minimizes the angular difference so that the two poses are angularly consistent with the previous poses.   In addition, it seeks to minimize the amount of "play" in the overlap of the spatial curve with the skeleton splice.  Finally, the equation also seeks to minimize the landmark cost.  \\\\(LM_\{max\}\\\\) is the maximum landmark cost out of all the candidate poses.   We select the pose with the highest cost evaluation as our selected pose after motion estimation as shown in [](#motion_evaluation).\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 \
![Best evaluated pose after motion estimation.][motion_evaluation]\
\
[motion_evaluation]: {\field{\*\fldinst{HYPERLINK "scrivlnk://323"}}{\fldrslt motion_evaluation}} width=400px\
\pard\pardeftab720\li1440\fi-810\sl288\slmult1
\cf0 \
We can see a breakdown of evaluation of each metric for each pose on every splice shown in [](#motion_cost).  Each color curve on the graph indicates a particular splice.  The x-axis indicates the arc length on the splice that the particular pose is located.   Each splice is shown twice because we are evaluating a pair of poses together representing both the front and back sweeping posture images.  The evaluation function result is shown in the fifth row.\
\
A Gaussian bias is applied with respect to the previous pose that acts as a forcing function to represent the motion shown in sixth row.  The final result is shown in the bottom row and is used to select the best pair of poses.\
\
Though we have selected the best pose out of all candidates, we still keep around these other candidates for later.  We will reuse them when we perform localization.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural
\cf0 ![Evaluation function and metrics.  Each color curve is a different splice.  The x-axis indicates the arc length of the splice where the pose is located.  In order from top to bottom:  1) landmark cost, 2) angular difference, 3) overlap sum, 4) contiguity fraction, 5) motion evaluation function, 6) motion gaussian bias, 7) sum of bias and eval][motion_cost]\
\
[motion_cost]: {\field{\*\fldinst{HYPERLINK "scrivlnk://324"}}{\fldrslt motion_cost}} width=400px\
\pard\pardeftab720\li1440\fi-810\sl288\slmult1
\cf0 \
\pard\pardeftab720\li810\fi-810\sl288\slmult1
\cf0 \
}