{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 ##Pose Particle Filter [particle_filter]\
\
Population of pose hypotheses, localized, evaluated, resampled.\
\
We first begin by building and representing the state space of possible poses of the robot.  The full and complete state space is the full space of possible \\\\((x,y,\\theta)\\\\) combination values.   Either a parameterization or discretization approach is required to computationally represent it.  However, computing over the full range of values is computationally expensive and unnecessary.  In our case, we make some assumptions and simplifications to make computation more tractable.\
\
First, we take the maximum likelihood approach of all past poses to build our skeleton map.   However, the current pose is represented by a random variable and a belief distribution given the maximum likelihood map.  We begin our probabilistic map by considering the multiple possible poses of the robot and increase the belief of poses that have the best possible fit.\
\
Since the robot is in a confined space and all the sensed area is void space, it stands to reason that any possible location of the robot will be close to or on one of the skeleton curves.  With this observation, it is possible to reduce the dimensionality of the possible pose locations and make the localization problem much simpler.\
\
The pose is originally represented by 3 values: \\\\((x,y,\\theta)\\\\).  We can reduce the dimensionality of the pose by restricting the pose to be a point on a skeleton splice.   Specifically, given a curve, a pose on the curve can be represented by two variables, the angle \\\\(\\theta\\\\) and the arc distance \\\\(u\\\\).  Therefore, the current pose of the robot given the maximum likelihood map is represented by the vector \\\\( (u,\\theta) \\\\) and its designated skeleton splice \\\\(s\\\\) curve.\
\
The skeleton splice \\\\(s\\\\) is a small number of possible values.  The 2 dimensional pose vector dramatically reduces the state space of the pose.  Therefore, our posterior distribution need only cover 2 dimensions for a finite number of skeleton splices.  This makes the computational problem much more tractable compared to the full 3 dimensional state space.  **Image of 3d space vs skeleton splice space **\
\
This approach assumes that any possible pose will be located on a skeleton splice curve.  This approach can encounter difficulties if this is not the case.  Any situation where the pose would not be on the skeleton curve is either, the skeleton is distorted by improperly localized previous poses, or the robot is not in the center of the pipe.  The latter case is possible if the pipe is too wide for the robot to anchor to the edges.   One of our original assumptions is that environment is not too wide for the robot to anchor.\
\
The choice of Bayes' Rule approximation method must consider a number of factors.  These include the computational cost of evaluating a pose's fitness for a particular location, the computational representation of the prior and posterior, and the computation of the update for the Bayes' Rule equation.\
\
<!--\
\\begin\{equation\}\
P(X_\{t+1\} | X_\{t:1\}, U_\{t:1\}, I_\{t:1\}) = P(X_\{t+1\}) \\times P(X_t | X_\{t+1\})  / P(X_t)\
\\end\{equation\}\
-->\
\
### Particle Filter Implementation\
\
Particles represent a hypothesis of \\\\(u,\\theta,s)\\\\).  \
\
Update step.\
\
1. Move step.  Displace by arc distance + random(), align angle only (costly)\
2. ICP fit, localize to all local splices. (costly)\
3. For each particle, evaluate every splice localization (costly)\
4. For each particle, select best fit\
5. Create probability distribution over particles\
6. Resample particles according to probability distribution\
\
\
\
 However, for the current pose, we represent the posterior of possible poses with a particle filter \\cite\{particle filter\}.\
}